{
    "docs": [
        {
            "location": "/", 
            "text": "Introduction\n\n\nThe blockchain industry and the infrastructure of the Internet of Value are being built rapidly around the globe, and to many the atmosphere is eerily similar to the building of the Internet in the late \u201990s, with pioneers and dreamers coming together to build a new future. The objective of Tomochain is to become a leading part of this phenomenon through seamlessly merging an ecosystem of applications with cryptographic tokens used by millions of mainstream users with a unique blockchain infrastructure architecture, allowing for fast, frictionless payment and a secure, decentralised, and trusted store of value.\n\n\n\n\nTomochain aims to be a public EVM-compatible blockchain with the following advantages: low transaction fee, fast confirmation time, double validation and randomization for security guarantees. Tomochain envisions an ecosystem of different DApps running on the Tomochain blockchain infrastructure.\n\n\n\n\nIn particular, we propose a solution for solving the transaction processing performance bottleneck in Ethereum which hinders its adoption into industries, especially finance. More specifically, we are constructing an efficient and secured consensus protocol, which tackles the following main bottlenecks of classic blockchains:\n\n\n\n\nEfficiency: The small throughput of Bitcoin and Ethereum severely hinders a widespread adoption of such crypto- currencies.\n\n\nConfirmation times: Bitcoin takes on average 1 hour to confirm a transaction because the confirmation of a Bitcoin block requires 5 subsequent blocks created following it. While Ethereum uses a smaller block-time, the average confirmation time still remains relatively high, around 13 minutes. These long confirmation times hinder many important applications (especially smart contract applications).\n\n\nFork Generation: The problem of fork chain consumes computational energy, time, and creates potential vulnerabilities for different types of attacks.\n\n\n\n\nIn the newly published technical paper, Tomochain proposes the Proof-of-Stake Voting (PoSV) consensus, which is a PoS-based blockchain protocol with a fair voting mechanism, rigorous security guarantees, and uniform probability eventually. The consensus has the following key novelties:\n\n\n\n\nDouble Validation to strengthen security and reduce fork\n\n\nRandomization to guarantee the fair and prevent handshaking attack\n\n\nFast confirmation time and efficient checkpoints for finality or rebase\n\n\n\n\nTomochain Team is currently implementing these mechanisms based on the Ethereum source code.", 
            "title": "Introduction"
        }, 
        {
            "location": "/#introduction", 
            "text": "The blockchain industry and the infrastructure of the Internet of Value are being built rapidly around the globe, and to many the atmosphere is eerily similar to the building of the Internet in the late \u201990s, with pioneers and dreamers coming together to build a new future. The objective of Tomochain is to become a leading part of this phenomenon through seamlessly merging an ecosystem of applications with cryptographic tokens used by millions of mainstream users with a unique blockchain infrastructure architecture, allowing for fast, frictionless payment and a secure, decentralised, and trusted store of value.   Tomochain aims to be a public EVM-compatible blockchain with the following advantages: low transaction fee, fast confirmation time, double validation and randomization for security guarantees. Tomochain envisions an ecosystem of different DApps running on the Tomochain blockchain infrastructure.   In particular, we propose a solution for solving the transaction processing performance bottleneck in Ethereum which hinders its adoption into industries, especially finance. More specifically, we are constructing an efficient and secured consensus protocol, which tackles the following main bottlenecks of classic blockchains:   Efficiency: The small throughput of Bitcoin and Ethereum severely hinders a widespread adoption of such crypto- currencies.  Confirmation times: Bitcoin takes on average 1 hour to confirm a transaction because the confirmation of a Bitcoin block requires 5 subsequent blocks created following it. While Ethereum uses a smaller block-time, the average confirmation time still remains relatively high, around 13 minutes. These long confirmation times hinder many important applications (especially smart contract applications).  Fork Generation: The problem of fork chain consumes computational energy, time, and creates potential vulnerabilities for different types of attacks.   In the newly published technical paper, Tomochain proposes the Proof-of-Stake Voting (PoSV) consensus, which is a PoS-based blockchain protocol with a fair voting mechanism, rigorous security guarantees, and uniform probability eventually. The consensus has the following key novelties:   Double Validation to strengthen security and reduce fork  Randomization to guarantee the fair and prevent handshaking attack  Fast confirmation time and efficient checkpoints for finality or rebase   Tomochain Team is currently implementing these mechanisms based on the Ethereum source code.", 
            "title": "Introduction"
        }, 
        {
            "location": "/get-started/started/", 
            "text": "Voter's Guide\n\n\nThis page will show you how to vote for masternodes in the Tomochain ecosystem.\n\n\nCreate a wallet\n\n\nIn order to vote, you first need to have a wallet.\n\n\nIf you do not have one already, you can easily create it \nTomoWallet\n.\n\n\nYou also can use Myetherwallet or Metamask to create your own wallet. \n\n\nThe RPC url of our testnet is \nhttps://testnet.tomochain.com\n, and Network ID is 89.\n\n\nYou can follow \nthis tutorial\n in order to connect your Metamask wallet to our testnet.\n\n\nGet some TOMO\n\n\nTomoWallet\n provides a function named \nEarn TOMO to test\n. It allows you to get 15 TOMO on the Testnet.\n\n\nWe also have a service called \"Faucet\" which allows you to get 15 TOMO at a time. Note that, faucet TOMO is only used for experimenting with the testnet and has no value in our TomoChain mainnet which will be launched in Q4 this year. \n\n\nTo get faucet TOMO:\n1. Access the faucet site at: \nhttps://faucet.testnet.tomochain.com\n\n\n\n\n\n\nEnter your wallet address in the field and tick the \nI'm not a robot\n box.\n\n\n\n\n\n\nClick \nREQUEST 15 TOMO\n and Wait for some seconds for the transaction to be confirmed.\n\n\n\n\n\n\nYou will receive a success confirmation message and the amount of TOMO in your wallet should be updated. You can check your TOMO balance by either looking at your wallet or using \nTomoScan\n.\n\n\nHow To Vote\n\n\nNow you have some TOMO. You can access our governance dapp, \nTomomaster\n, to start voting for masternodes.\n\n\nTomomaster natively supports Metamask. You can also access your account page (the vertical three dots on the top right) to fill in your wallet Private Key or MNEMONIC (see image below).\n\n\nIf you use Metamask, you need to connect Mettamask to our testnet (please see the \"Create a wallet\" section) and choose Metamask in the drop-down settings list.\n\n\n\n\nOnce configured, you can vote for masternodes by clicking on the \nVote\n button.\n\n\n\n\nAt least 10 TOMO is required per vote. After clicking submit, your TOMO will be sent to the voting smart contract and locked there.\n\n\nReward\n\n\nEvery epoch (~30 minutes), you will automatically receive rewards for each masternode you voted for.\n\n\nHow to Unvote\n\n\nIf you do not want to support a masternode you voted for, you can unvote it by clicking the \nUnvote\n button on the masternode's page and enter the amount of TOMO you want to unvote. \n\n\nAfter unvoting, your TOMO is still locked in the smart contract for 48 hours before you are able to withdraw.\n\n\nHow to Withdraw\n\n\nFor withdrawals after unvoting, you need to wait until your TOMO is unlocked from the smart contract. Then you can click the \nwithdraw\n button in your account page (the vertical three dots on the top right) and choose which withdrawal you want to receive back your TOMO. \n\n\nNote that you might see multiple withdrawals on your account page if you made multiple unvotes previously. \n\n\nIf you withdraw before the unlock period expires, an error will be raised.", 
            "title": "Voter's Guide"
        }, 
        {
            "location": "/get-started/started/#voters-guide", 
            "text": "This page will show you how to vote for masternodes in the Tomochain ecosystem.", 
            "title": "Voter's Guide"
        }, 
        {
            "location": "/get-started/started/#create-a-wallet", 
            "text": "In order to vote, you first need to have a wallet.  If you do not have one already, you can easily create it  TomoWallet .  You also can use Myetherwallet or Metamask to create your own wallet.   The RPC url of our testnet is  https://testnet.tomochain.com , and Network ID is 89.  You can follow  this tutorial  in order to connect your Metamask wallet to our testnet.", 
            "title": "Create a wallet"
        }, 
        {
            "location": "/get-started/started/#get-some-tomo", 
            "text": "TomoWallet  provides a function named  Earn TOMO to test . It allows you to get 15 TOMO on the Testnet.  We also have a service called \"Faucet\" which allows you to get 15 TOMO at a time. Note that, faucet TOMO is only used for experimenting with the testnet and has no value in our TomoChain mainnet which will be launched in Q4 this year.   To get faucet TOMO:\n1. Access the faucet site at:  https://faucet.testnet.tomochain.com    Enter your wallet address in the field and tick the  I'm not a robot  box.    Click  REQUEST 15 TOMO  and Wait for some seconds for the transaction to be confirmed.    You will receive a success confirmation message and the amount of TOMO in your wallet should be updated. You can check your TOMO balance by either looking at your wallet or using  TomoScan .", 
            "title": "Get some TOMO"
        }, 
        {
            "location": "/get-started/started/#how-to-vote", 
            "text": "Now you have some TOMO. You can access our governance dapp,  Tomomaster , to start voting for masternodes.  Tomomaster natively supports Metamask. You can also access your account page (the vertical three dots on the top right) to fill in your wallet Private Key or MNEMONIC (see image below).  If you use Metamask, you need to connect Mettamask to our testnet (please see the \"Create a wallet\" section) and choose Metamask in the drop-down settings list.   Once configured, you can vote for masternodes by clicking on the  Vote  button.   At least 10 TOMO is required per vote. After clicking submit, your TOMO will be sent to the voting smart contract and locked there.", 
            "title": "How To Vote"
        }, 
        {
            "location": "/get-started/started/#reward", 
            "text": "Every epoch (~30 minutes), you will automatically receive rewards for each masternode you voted for.", 
            "title": "Reward"
        }, 
        {
            "location": "/get-started/started/#how-to-unvote", 
            "text": "If you do not want to support a masternode you voted for, you can unvote it by clicking the  Unvote  button on the masternode's page and enter the amount of TOMO you want to unvote.   After unvoting, your TOMO is still locked in the smart contract for 48 hours before you are able to withdraw.", 
            "title": "How to Unvote"
        }, 
        {
            "location": "/get-started/started/#how-to-withdraw", 
            "text": "For withdrawals after unvoting, you need to wait until your TOMO is unlocked from the smart contract. Then you can click the  withdraw  button in your account page (the vertical three dots on the top right) and choose which withdrawal you want to receive back your TOMO.   Note that you might see multiple withdrawals on your account page if you made multiple unvotes previously.   If you withdraw before the unlock period expires, an error will be raised.", 
            "title": "How to Withdraw"
        }, 
        {
            "location": "/get-started/testnet/", 
            "text": "Tomochain Testnet Information:\n\n\nChain ID: 89\nRPC: https://testnet.tomochain.com\nWebsocket: wss://testnet.tomochain.com/ws\n\n\n\n\nTestnet status: \nhttps://stats.testnet.tomochain.com\n\n\nBlock Explorer for the testnet: \nhttps://scan.testnet.tomochain.com\n\n\nYou can get free TOMO in our testnet at this site (faucet): \nhttps://faucet.testnet.tomochain.com", 
            "title": "Testnet"
        }, 
        {
            "location": "/get-started/run-node/", 
            "text": "Running a TomoChain full node\n\n\nWith the recent release of TomoChain Testnet 2.0 with our PoSV consensus, you might be interested in creating a TomoChain full node and applying it to be a masternode.\n\n\nTo run a full node and meet the requirements to apply on our governance DApp, you have to run two services:\n\n\n\n\nThe \nTomoChain client\n, our TomoChain implementation written in \nGo\n.\n\n\nTelegraf\n, an agent to collect performance metrics of your full node.\n\n\n\n\nGeneral hardware notice\n\n\nOur team extensively tested performances and came up with those minimal requirements for any TomoChain masternode host.\n\n\nTestnet\n\n\n\n\nMust be facing internet directly (no NAT, public IP)\n\n\nMust have at least 2 cores\n\n\nMust have at least 8GB of RAM\n\n\nMust use an IaaS (\"cloud\") provider of your choice (AWS, Digital Ocean, Google Cloud, etc.).\n\n\nStorage must be SSD\n\n\n\n\nMainnet\n\n\n\n\nMust be facing internet directly (no NAT, public IP)\n\n\nMust have at least 8 cores\n\n\nMust have at least 32GB of RAM\n\n\nMust use an IaaS (\"cloud\") provider of your choice (AWS, Digital Ocean, Google Cloud, etc.)\n\n\nStorage must be SSD\n\n\n\n\nThe full node will serve on port \n30303\n udp and tcp for p2p communication with other nodes, \n8545\n tcp for RPC api and \n8546\n tcp for websocket api.\nYou may need to edit your firewall configuration accordingly.\n\n\nIf you have other production grade environment than cloud provider at your displosal, please tell us more about on our \nGitter\n.\n\n\ntmn\n\n\nWe made a simple command line interface called \ntmn\n to easily and quickly start a TomoChain masternode.\nIt takes care of starting the necessary docker containers with the proper settings for you.\nIt will really suit you if you don't already have a big infrastructure running.\nSpin up a machine in your favorite cloud and get your masternode running in a few minutes!\n\n\nPrerequisites\n\n\nTo use tmn, you should meet these requirements in addition to the hardware ones:\n\n\n\n\nDocker CE\n\n\nPython\n \n= 3.6\n\n\n\n\nInstallation\n\n\nSimply install it from pip.\n\n\npip3 install --user tmn\n\n\n\n\nUpdate\n\n\nUpdate it from pip.\n\n\npip3 install -U tmn\n\n\n\n\nFirst start\n\n\nWhen you first start your full node with tmn, you need to give some informations.\n\n\n--name\n: The name of your full node.\nIt should be formatted as a slug string.\nSlug format authorize all letters and numbers, dashes (\"-\") and underscores (\"_\").\nYou can name it to reflect your identity, company name, etc.\n\n\n--net\n: The network your full node will connect to.\nYou can choose here to connect it to the TomoChain Testnet or Mainnet (once launched).\n\n\n--pkey\n: The private key of the account that your full node will use.\nA TomoChain full node uses an account to be uniquely identified and to receive transaction fee.\n\n\nIt could look like this:\n\n\ntmn start --name [YOUR_NODE_NAME] \\\n    --net testnet \\\n    --pkey [YOUR_COINBASE_PRIVATE_KEY]\n\n\n\n\nOnce started, you should see your node on the \nstats page\n!\n\n\nNote: it can take up to 15 minutes to properly end the first synchronization.\n\n\nUsage\n\n\nYou can now interact with it via the other commands:\n\n\nstop\n: Stop your full node.\n\n\nstart\n: Start your full node if it is stopped.\n\n\nstatus\n: The current status of your full node.\n\n\ninspect\n: Display the details related to your full node.\nUseful for applying your full node as a masternode.\n\n\nremove\n: Completely remove your masternode, unique identity and data.", 
            "title": "Running a node"
        }, 
        {
            "location": "/get-started/run-node/#running-a-tomochain-full-node", 
            "text": "With the recent release of TomoChain Testnet 2.0 with our PoSV consensus, you might be interested in creating a TomoChain full node and applying it to be a masternode.  To run a full node and meet the requirements to apply on our governance DApp, you have to run two services:   The  TomoChain client , our TomoChain implementation written in  Go .  Telegraf , an agent to collect performance metrics of your full node.", 
            "title": "Running a TomoChain full node"
        }, 
        {
            "location": "/get-started/run-node/#general-hardware-notice", 
            "text": "Our team extensively tested performances and came up with those minimal requirements for any TomoChain masternode host.  Testnet   Must be facing internet directly (no NAT, public IP)  Must have at least 2 cores  Must have at least 8GB of RAM  Must use an IaaS (\"cloud\") provider of your choice (AWS, Digital Ocean, Google Cloud, etc.).  Storage must be SSD   Mainnet   Must be facing internet directly (no NAT, public IP)  Must have at least 8 cores  Must have at least 32GB of RAM  Must use an IaaS (\"cloud\") provider of your choice (AWS, Digital Ocean, Google Cloud, etc.)  Storage must be SSD   The full node will serve on port  30303  udp and tcp for p2p communication with other nodes,  8545  tcp for RPC api and  8546  tcp for websocket api.\nYou may need to edit your firewall configuration accordingly.  If you have other production grade environment than cloud provider at your displosal, please tell us more about on our  Gitter .", 
            "title": "General hardware notice"
        }, 
        {
            "location": "/get-started/run-node/#tmn", 
            "text": "We made a simple command line interface called  tmn  to easily and quickly start a TomoChain masternode.\nIt takes care of starting the necessary docker containers with the proper settings for you.\nIt will really suit you if you don't already have a big infrastructure running.\nSpin up a machine in your favorite cloud and get your masternode running in a few minutes!", 
            "title": "tmn"
        }, 
        {
            "location": "/get-started/run-node/#prerequisites", 
            "text": "To use tmn, you should meet these requirements in addition to the hardware ones:   Docker CE  Python   = 3.6", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/get-started/run-node/#installation", 
            "text": "Simply install it from pip.  pip3 install --user tmn", 
            "title": "Installation"
        }, 
        {
            "location": "/get-started/run-node/#update", 
            "text": "Update it from pip.  pip3 install -U tmn", 
            "title": "Update"
        }, 
        {
            "location": "/get-started/run-node/#first-start", 
            "text": "When you first start your full node with tmn, you need to give some informations.  --name : The name of your full node.\nIt should be formatted as a slug string.\nSlug format authorize all letters and numbers, dashes (\"-\") and underscores (\"_\").\nYou can name it to reflect your identity, company name, etc.  --net : The network your full node will connect to.\nYou can choose here to connect it to the TomoChain Testnet or Mainnet (once launched).  --pkey : The private key of the account that your full node will use.\nA TomoChain full node uses an account to be uniquely identified and to receive transaction fee.  It could look like this:  tmn start --name [YOUR_NODE_NAME] \\\n    --net testnet \\\n    --pkey [YOUR_COINBASE_PRIVATE_KEY]  Once started, you should see your node on the  stats page !  Note: it can take up to 15 minutes to properly end the first synchronization.", 
            "title": "First start"
        }, 
        {
            "location": "/get-started/run-node/#usage", 
            "text": "You can now interact with it via the other commands:  stop : Stop your full node.  start : Start your full node if it is stopped.  status : The current status of your full node.  inspect : Display the details related to your full node.\nUseful for applying your full node as a masternode.  remove : Completely remove your masternode, unique identity and data.", 
            "title": "Usage"
        }, 
        {
            "location": "/get-started/apply-masternode/", 
            "text": "Once your full node is up and running, you need to apply it to make him eligible as a masternode.\n\n\nGetting sufficient TOMO\n\n\nAs 50'000 TOMO are required to apply, the first thing to do is to fill out the following \nform\n:\n\n\nLoading...\n\n\n\nOur team will then review your request and send you the required funds. \n\n\nNote: Those TOMO are only usable in testnet, they have absolutely no trading value\n\n\nApplying to become a masternode\n\n\nYou can now apply by going on the \nTomoMaster\n page.\nLogin with the wallet that contains your newly received 50'000 TOMO.\n\n\nOn the top right corner, click on \"Become a Candidate\".\n\n\nEnter the amount of TOMO you want to deposit (minimum 50'000).\n\n\nEnter your coinbase address. This is the public key of the account that your masternode is using. \nIf your are running your node with \ntmn\n, you can simply run \ntmn inspect\n to get it.\n\n\nConfirm with apply and proceed to make the payement.\n\n\nYour full node will now be listed on TomoMaster.\nPeople can view its details and vote for it.\n\n\nIf your node is in the top 150 most voted nodes, it will be promoted as a masternode and will start producing blocks at the next epoch.\n\n\nResigning your masternode\n\n\nIn case you want to stop your node, you need to resign it from the governance first in order to retrieve your locked funds.\nAccess \nTomoMaster\n, go to your candidate detail page, and click the \nResign\n button.\nYour funds will be available to withdraw 30 days after the resignation.\n\n\nAfter resigning successfully, you can stop your node. If you ran it with \ntmn\n, simply run:\n\n\ntmn remove\n\n\n\n\nAt this point, your masternode is completly terminated.", 
            "title": "Applying to become a masternode"
        }, 
        {
            "location": "/get-started/apply-masternode/#getting-sufficient-tomo", 
            "text": "As 50'000 TOMO are required to apply, the first thing to do is to fill out the following  form :  Loading...  Our team will then review your request and send you the required funds.   Note: Those TOMO are only usable in testnet, they have absolutely no trading value", 
            "title": "Getting sufficient TOMO"
        }, 
        {
            "location": "/get-started/apply-masternode/#applying-to-become-a-masternode", 
            "text": "You can now apply by going on the  TomoMaster  page.\nLogin with the wallet that contains your newly received 50'000 TOMO.  On the top right corner, click on \"Become a Candidate\".  Enter the amount of TOMO you want to deposit (minimum 50'000).  Enter your coinbase address. This is the public key of the account that your masternode is using. \nIf your are running your node with  tmn , you can simply run  tmn inspect  to get it.  Confirm with apply and proceed to make the payement.  Your full node will now be listed on TomoMaster.\nPeople can view its details and vote for it.  If your node is in the top 150 most voted nodes, it will be promoted as a masternode and will start producing blocks at the next epoch.", 
            "title": "Applying to become a masternode"
        }, 
        {
            "location": "/get-started/apply-masternode/#resigning-your-masternode", 
            "text": "In case you want to stop your node, you need to resign it from the governance first in order to retrieve your locked funds.\nAccess  TomoMaster , go to your candidate detail page, and click the  Resign  button.\nYour funds will be available to withdraw 30 days after the resignation.  After resigning successfully, you can stop your node. If you ran it with  tmn , simply run:  tmn remove  At this point, your masternode is completly terminated.", 
            "title": "Resigning your masternode"
        }, 
        {
            "location": "/wallets/tomowallet/", 
            "text": "Now, TomoWallet is available at \nhttps://wallet.testnet.tomochain.com\n. You can try to create a wallet, get some TOMO on the testnet or transfer/receive TOMO.\n\n\nNote: For now, TomoWallet only works on Tomochain Testnet. So all TOMO you have in TomoWallet is only for testing purpose.\n\n\nCreate a new wallet\n\n\nOn the first page, click \nCREATE NEW WALLET\n button. TomoWallet will automatically create a new wallet and show up the address, qr code and the balance in your home page.\n\n\n\n\nEarn TOMO\n\n\nOn the homepage, you click \nEarn TOMO to test\n on the bottom left corner. After that, you can click \nREQUEST\n button and wait a couple of seconds to get some TOMO.\n\n\n\n\nTransfer TOMO\n\n\nOn left menu, click \nTranfer\n to go to \nTranfer TOMO\n page.\n\n\n\n\nYou just need to enter a valid recipient address and amount TOMO you want to send and click \nSEND\n.\n\n\nAfter few seconds, you transaction will be presented at \nTransactions\n page as the below:\n\n\n\n\nDelete a wallet\n\n\nIn case, you want to access other wallets, you need to delete current wallet. Make sure you already backup \nPrivate Key\n and \nRecovery Phrases\n. So you can import your wallet again.\n\n\nTo delete your wallet, just go to \ndetails\n page, and click \nDELETE THIS WALLET\n button.\n\n\nImport your wallet\n\n\nOn the first page, clock \nIMPORT YOUR WALLET\n. After that, enter our \nPrivate Key\n or \nRecovery Phrases\n, click \nIMPORT\n button.", 
            "title": "TomoWallet"
        }, 
        {
            "location": "/wallets/tomowallet/#create-a-new-wallet", 
            "text": "On the first page, click  CREATE NEW WALLET  button. TomoWallet will automatically create a new wallet and show up the address, qr code and the balance in your home page.", 
            "title": "Create a new wallet"
        }, 
        {
            "location": "/wallets/tomowallet/#earn-tomo", 
            "text": "On the homepage, you click  Earn TOMO to test  on the bottom left corner. After that, you can click  REQUEST  button and wait a couple of seconds to get some TOMO.", 
            "title": "Earn TOMO"
        }, 
        {
            "location": "/wallets/tomowallet/#transfer-tomo", 
            "text": "On left menu, click  Tranfer  to go to  Tranfer TOMO  page.   You just need to enter a valid recipient address and amount TOMO you want to send and click  SEND .  After few seconds, you transaction will be presented at  Transactions  page as the below:", 
            "title": "Transfer TOMO"
        }, 
        {
            "location": "/wallets/tomowallet/#delete-a-wallet", 
            "text": "In case, you want to access other wallets, you need to delete current wallet. Make sure you already backup  Private Key  and  Recovery Phrases . So you can import your wallet again.  To delete your wallet, just go to  details  page, and click  DELETE THIS WALLET  button.", 
            "title": "Delete a wallet"
        }, 
        {
            "location": "/wallets/tomowallet/#import-your-wallet", 
            "text": "On the first page, clock  IMPORT YOUR WALLET . After that, enter our  Private Key  or  Recovery Phrases , click  IMPORT  button.", 
            "title": "Import your wallet"
        }, 
        {
            "location": "/wallets/mew/", 
            "text": "MyEtherWallet released version 3.21.14, supports TomoChain Testnet 2.0. So you are able to easily use MEW to transfer/receive TOMO on Testnet.\n\n\nFrom \nMyEtherWallet\n homepage, at top right corner, you can select TomoChain Testnet\n\n\n\n\nAfter that, you can import/create a wallet, view the balance and make a transaction to send TOMO to another address.\n\n\n\n\nAll transactions you make will be recorded in TomoChain transparently viewed on TomoScan.\n\n\n\n\nYou are also able to use hardware wallets (Trezor, Ledger Nano S) in MyEtherWallet to connect TomoChain Testnet.", 
            "title": "MyEtherWallet"
        }, 
        {
            "location": "/wallets/metamask/", 
            "text": "Tomochain will guide you how to connect MetaMask to Tomochain Testnet. It is an essential step to study an overview of Tomochain features in term of meeting the crypto trading needs on system. To developers looking to learn about Dapp and Smart Contract.\n\n\nGet started! You first need to install Extension MetaMask on Chrome or Brave browsers. Once you agree to the Metamask Terms of Use and create an account successfully, follow instructions:\n\n\nStep 1:\n Click to MetaMask logo on the browser to open the Extention -\n select \u201cNetwork\u201d -\n select \u201cCustom RPC\u201d as shown below:\n\n\n\n\nStep 2:\n When Setting screen pops up, you enter \u201chttps://testnet.tomochain.com\u201d into New RPC URL Texbox then Save.\n\n\n\n\nStep 3:\n You successfully connect to Tomochain Testnet after 2 steps. Next, you use TOMO to pay a Gas fee to implement Smart Contact. To have some TOMO in the testnet, you can enter your wallet address in Faucet site \nhttps://faucet.testnet.tomochain.com/\n to request some TOMO.\n\n\nSo, you accomplish connecting the MetaMask to Tomochain (testnet). From now on, you can make transactions and develop Dapp as well as Smart Contract as you wish.", 
            "title": "Metamask"
        }, 
        {
            "location": "/whitepaper/", 
            "text": "Introduction\n\n\nversion 1.0 (\npdf version\n)\n\n\nThe blockchain industry and the infrastructure of the Internet of Value\nare being built rapidly around the globe, and to many the atmosphere is\neerily similar to the building of the Internet in the late \u201890s, with\npioneers and dreamers coming together to build a new future. \nTomochain\n can be a\nleading part of this phenomenon through seamlessly merging an ecosystem\nof applications with cryptographic tokens used by millions of mainstream\nusers with a unique blockchain infrastructure architecture allowing for\na fast, secure, frictionless payment and trusted store of value.\n\n\nDistributed systems have been researched in a \u201c\npermissioned setting\n\u201d\nwhere the number of participants in the system and their identities are\ncommon knowledge. In 2008, Satoshi Nakamoto - \u201cproposed his celebrated\n\u201cblockchain protocol\u201d which attempts to achieve consensus in a\npermissionless setting: anyone can join (or leave) the protocol\nexecution (without getting permission from a centralized or distributed\nauthority), and the protocol instructions do not depend on the\nidentities of the players\u201d (see \nhere\n). Later on, Ethereum with its\nEthereum Virtual Machine (EVM) proposed several significant enhancements\ncompared to Bitcoin, including Smart Contracts. Both Bitcoin and\nEthereum have some issues, especially with transaction processing\nperformance. In order to construct an efficient and secured consensus\nprotocol for \nTomochain\n, we tackle the following main bottlenecks of classic\nblockchains:\n\n\n\n\n\n\nEfficiency:\n Existing blockchains as employed by major\n    crypto-currencies(e.g., Bitcoin or Ethereum) do not scale well to\n    handle a large transaction volume, e.g. Bitcoin and Ethereum can\n    handle around 10 transactions/second. This small throughput severely\n    hinders a wide-spread adoption of such crypto-currencies.\n\n\n\n\n\n\nConfirmation times:\n The 10 minutes \nBitcoin\n block-time is significantly larger than network latency.\n    Furthermore, a Bitcoin block requires 5 subsequent blocks following\n    it so that it can be confirmed; thus it takes on average one hour\n    for a transaction to be confirmed (with low confidence). While\n    Ethereum uses a smaller block-time, the average confirmation time\n    still remains relatively high, around 13 minutes\n    \nCardano\n. These long confirmation times hinder many important\n    applications (especially smart contract applications).\n\n\n\n\n\n\nFork Generation:\n The problem of fork chain consumes\n    computational energy, time, and creates potential vulnerabilities\n    for different types of attacks.\n\n\n\n\n\n\nWith the motivation as mentioned above, our persistent and ultimate goal\nof research is to propose the consensus protocol focusing on the\nfollowing key strategies:\n\n\n\n\n\n\nDouble Validation to strengthen security and reduce fork\n\n\n\n\n\n\nRandomization to guarantee the fair and prevent handshaking attack\n\n\n\n\n\n\nFast confirmation time and efficient checkpoints for finality or\n    rebase\n\n\n\n\n\n\nTo start dealing with these problems, in this paper, we present an\noverview architectural design of Tomochain\u2019s master nodes. In particular, we\npropose (PoSV) consensus, a Proof-of-Stake (PoS)-based blockchain\nprotocol with a fair voting mechanism, rigorous security guarantees and\nfast finality. We also present a novel reward mechanism and show that,\nwith this mechanism, the blockchain has a low probability of forks, fast\nconfirmation times, plus the contributions and benefits of masternodes\nare fair in the sense that the probability distribution function is\nuniform eventually.\n\n\nStructure of the remainder of the paper\n\n\n\n\nSection \nTomochain Overview\n: explains the intuition ideas and\noverview architectural design of masternodes, framework and background\nprotocols that help mass readers (e.g., investors, traders, others) who\nmay not have technical knowledge understand our mechanism easily.\n\n\nSection \nStakeholders \n Voting\n presents \nTomochain\n stakeholder policy, masternode\ncommittee voting systems, and reward mechanism.\n\n\nSection \nTomochain consensus protocol\n explains the motivation and double\nvalidation process as well as finality checkpoint of the protocol. \n\n\nIn Section\u00a0\nProtocol formalizations\n, we present the formalization of our model in a mathematical way to show the soundness of our model and protocol. \n\n\nSection\u00a0\nSecurity Analysis\n discusses the security analysis and resistant strain of potential attacks. \n\n\nWe discuss and compare \nTomochain\n with several existing blockchains in Section \nrelated work\n. \n\n\nFinally, we conclude the paper in Section \nConclusion\n.\n\n\n\n\nTomochain Masternode Design\n\n\nThe Tomochain architecture\n\n\nThe \nTomochain\n blockchain is produced and maintained by a set of \nmasternodes\n in a\nconsistent manner through the \nTomochain consensus\n protocol as shown in Fig.\n\narchitecture\n. These masternodes are full nodes that hold TOMO.\nFor a token holder to become a masternode, two requirements must be\nsatisfied:\n\n\n\n\n\n\nThe token holder must hold at least a minimum required amount of tokens\n    (see next section for more details).\n\n\n\n\n\n\nThe token holder must be one of the most voted masternode candidates\n    in the system. The voting by token holders is credited through a\n    \nVoting DApp\n that allows token holders to \nsend TOMO through the\n    smart contract mechanism\n.\n\n\n\n\n\n\nIn addition to the voting system which is an improvement over the\ncurrent Bitcoin and Ethereum blockchain, TomoChain also provides a new technique,\nnamely \nDouble Validation\n complemented with a \nRandomization\n\nmechanism. This new technique significantly decreases the probability of\nhaving invalid blocks in the blockchain. These enhancements and the\ncomponents of \nTomochain\n are step-by-step detailed in the followings.\n\n\n\n\nStakeholders \n Voting\n\n\nToken holders, Masternodes\n\n\nToken holder is as simple as its name: users who join the network, who\nown and transfer TOMO. Masternodes are full-nodes which maintain a\ncopy of the blockchain, produce blocks and keep the chain consistent. It\nis worth noting that, \nTomochain\n does not have miners as in the current\nProof-of-Work-based blockchain systems such as Bitcoin and Ethereum.\nOnly masternodes can produce and validate blocks.\n\n\nMasternodes are selected via a voting system. The first requirement of\nbeing masternodes is to deposit 50 000 TOMO to the Voting Smart\nContract. Then, these depositors are listed as masternode candidates in\nthe Voting DApp, which allows token holders to vote for them by sending\nTOMO to the smart contract.\n\n\nMasternodes which work hard in the system to create and verify blocks\nwill be incentivized with TOMO. Furthermore, token holders who vote for\nthese incentivized masternodes will also receive TOMO in proportion to\nthe amount of TOMO they have invested via ballots. \nTomochain\n engineers take\nresponsibility to design that fair, explicit, automated and accountable\nreward mechanism.\n\n\nThe list of masternode candidates is dynamically sorted based on voted\ntokens. The performance of the masternodes will be tracked and reported\nback to the token holders in terms of three main metrics: CPU/Memory\ncharts which ensure the workload of the masternodes, the number of\nsigned blocks which indicates their work performance and the last signed\nblock which figures out their last activity. Token holders, at any time,\ncan unvote masternodes, who have low performance, and give their votes\nto the other masternodes who have beter performance. Token holders have\nincentives to do that because their voted tokens are seen as investment\nto their supported masternodes, thus they should choose a voting\nstrategy in order to maximize their profit from the investment.\n\n\nThis simple trick keeps the system healthy since masternodes always have\nto race for their position so that all weak masternodes will eventually\nbe eliminated. Therefore, only the strongest masternodes are voted and\ncan flourish.\n\n\nVoting \n Masternode Committee\n\n\nThere are maximum ninety-nine masternodes elected in the masternode\ncommittee. The required amount of deposit for masternode role is set at\n50 000 TOMO. This amount is locked in a \nvoting smart contract\n. Once\na masternode is demoted (by not remaining in the top ninety-nine voted\nmasternodes) or intentionally quits the masternode candidates\nlist/masternode committee, the deposit will have been locked for a\nmonth.\n\n\nToken holders can vote at any time, by any number of votes (which is\nactually counted by the amount of TOMO they bet on some masternode\ncandidates). They can use masternode\u2019s performance statistics in the\ngovernance \nVoting DApp\n as reference information to give votes. The set\nof masternodes is dynamically sorted by the amount of TOMO and counted\nup to ninety-nine, upon reception of votes.\n\n\nReward Mechanism\n\n\nFor each iteration of 900 blocks (called epoch), a checkpoint block is\ncreated, which implements only reward works. The masternode, who takes\nturn in the circular and sequential order to create blocks, has to scan\nall of the created blocks in the epoch and count number of signatures.\nThe reward mechanism is designed following the policy as follows: the\nhigher number of signatures one masternode has made, the more reward he\nearns. For instance, within an epoch, masternode A who has sealed twice\nthe blocks than masternode B earns double amount of TOMO than\nmasternode B does.\n\n\nFurthermore, there is also a reward sharing ratio among token holders and\nmasternode who has been elected supported by the token holders. For\nexample, within an epoch, one masternode receives \nX\n TOMO. Ten\npercent of \nX\n is sent to the masternode\u2019s address. Eighty percent of\n\nX\n is shared in proportion to the amount of tokens deposited and voted\nby the masternode and token holders, respectively. The last ten percent\nof \nX\n credits to the \nTomochain\n foundation. oken holders who unvote before the\ncheckpoint block will not receive any shared reward.\n\n\nTomochain Consensus Protocol\n\n\nDouble Validation Process\n\n\nIn TomoChain, masternodes share equal responsibility to run the system and keep\nit stable. Full nodes should run on powerful hardware configuration and\nhigh-speed network connectivity in order to ensure the required block\ntime (target to two seconds). Only masternodes can produce and seal\nblocks. In order for that, the \nTomochain\n consensus relies on the concept of\n\nDouble Validation\n that improves some existing consensus mechanisms,\nnamely \nSingle Validation\n. In the followings, we first describe the\n\nDouble Validation\n, then analyze the differences and improvements of\n\nDouble Validation\n compared to \nSingle Validation\n.\n\n\nDouble Validation (DV)\n\n\nSimilar to some existing PoS-based blockchains such as \nCardano\n, each\nblock is created by a block producer, namely masternode, that takes its\nblock creation permission turn following a pre-determined and circular\nsequence of masternodes for each epoch. However, differently from these\nexisting blockchains, DV in \nTomochain\n requires the signatures of two masternodes\non a block to be able to push the block to the blockchain. One of the\nmasternodes is the \nblock creator\n while the other one, namely \nblock\nverifier\n is randomly selected among the set of voted masternodes that\nvalidates the block and signs it. In the followings, for more\nconvenience, \nblock creator\n and \nblock verifier\n are used\ninterchangeably for the masternode 1 (block producer) and the randomly\nselected masternode 2 for a block, respectively. The process of randomly\nselecting the block verifiers is detailed in the next paragraphs. Note\nthat, there is no mining in the block creation as in Proof-of-Work-based\nblockchains (e.g. Ethereum and Bitcoin). It means that a created block\nis valid if and only if it is sealed by enough two signatures from a\nblock creator and a corresponding block verifier to confirm the\ncorrectness of it.\n\n\nWe believe this DV technique enhances the stability of the blockchain by\ndiminishing the probability of producing \u201cgarbage\u201d blocks while still\nmaintaining the system security and consistency. Randomization of block\nverifiers in DV is the key factor of reducing risks coming from paired\nmasternodes trying to commit malicious blocks. Furthermore, comparing to\nsome current public blockchains in the market, by utilizing the DV\ntechnique, \nTomochain\n brings significant improvements in the block time by only\nrequiring two signatures per block. For the purpose of showing our\nenhancement over existing PoS-based blockchains, we analyze the\ndifferences between DV and the Single Validation mechanism in some\nexisting blockchains as follows.\n\n\nImprovements of Double Validation over Single Validation\n\n\nLet\u2019s show the improvements of DV compared to Single Validation through\nanalyzing some attacking scenarios as shown in Fig.\n\nSingle Validation example\n and Fig. \nDouble Validation example\n.\n\n\n\n\nSingle Validation\n In Single Validation, in an epoch, each\n    masternode, e.g. M1, sequentially takes its turn to create a\n    block, e.g. block100. The next masternode, e.g. M2, in the sequence\n    then validates the created block100. If block100 is invalid (that\n    potentially means that M1 is an attacker) and contains a transaction\n    that invalidly benefits M1, if M2 is honest (see Fig.\n    \nSV a\n), it rejects block100 and creates\n    another block100 next to block99. But, if M2 is an attacker\n    (see Fig. \nSV b\n) that corporates with M1,\n    M2 ignores the invalidation of block100, signs it and creates next\n    block, namely block101 that is valid. Then, the next masternode M3\n    verifies that block101 is valid, M3 signs block101 and creates a\n    block102. By this way, Single Validation potentially leaves the\n    blockchain with \u201cgarbage\u201d or invalid blocks which require a \u201crebase\u201d\n    to restore the validity of the blockchain.\n\n\n\n\nSingle Validation (SV): (a) SV with block creation masternode as an attacker and (b) SV with two consecutive block creation masternodes as attackers\n\n\n\n\nDouble Validation\n We claim that our DV technique significantly\n    reduces the probability of having garbage blocks in the blockchain.\n    Assuming that M1 and M2 are the block creator and block verifier,\n    respectively, for block100 in our DV. If block100 is invalid and M2\n    is honest (see Fig. \nDV a\n), M2 will not\n    seal this block. Therefore, the next block creator M3 for creating\n    block101 will see that block100 does not have enough 2 signatures,\n    thus reject block100 and create another block100 next to block99. On\n    the other hand, if M2 is also an attacker pairing/handshaking with\n    M1 (see Fig. \nDV b\n), M2 signs block100\n    despite its invalidity (remember that the block verifier M2 is\n    randomly selected, there has little chance of successfully pairing\n    M1 and M2). Next, even though M3 will verify that block100 has two\n    valid signatures, M3 still rejects it because block100 is\n    invalidated by M3 that will create another valid block100. In order\n    to break the stability and consistency of the blockchain in this\n    case, M3 should be an attacker together with M1 and M2, which,\n    however, has a very low probability. In other words, DV strengthens\n    the consistency of the blockchain and makes it hard to break.\n\n\n\n\nDouble Validation (DV): (a) DV with block creator as an attacker and (b) DV with both block creator and block verifier as attackers\n\n\nRandomization for Block Verifiers for Double Validation\n\n\nThe First Masternode/Block Creator\n\n\nThe first masternode/block creator in a given epoch \ne\n can be selected\nby a round-turn game and can be formal defined as an array:\n\n\n\n\n\\begin{bmatrix} \n\\nu_1\n\\end{bmatrix}\n= \\begin{bmatrix} \nV_{1.1}^e  \\\\\nV_{1.2}^e\\\\\n\\cdot\\\\\n\\cdot\\\\\n\\cdot\\\\\nV_{1.n-1}^e\\\\\nV_{1.n}^e\\\\\n\\end{bmatrix}\n\n\n\n\nRandom Matrix and Smart Contract\n\n\nLet \nm\n be the number of masternodes, \nn\n be the number of slots in an\nepoch. In order to randomly generate the block verifiers for the next\nepoch \ne+1\n, the process is performed by the following steps.\n\n\n\n\n\n\nStep 1: Random Numbers Generation and Commitment Phase:\n\n\nFirst, at the beginning of epoch \ne\n, each masternode \nV_i\n will\nsecurely create an array of \nn+1\n special random numbers\n\n Recommend_i= [ r_{i.1}, r_{i.2}, ..., r_{i.n}, \\theta_i]\n, where\n\nr_{i.k}\\in [1, ..., m]\n indicating the recommendation of ordered\nlist of block verifiers for the next epoch of \nV_i\n, and\n\n\\theta_i \\in \\{-1, 0, 1\\}\n is used for increasing the\nunpredictability of the random numbers. Second, each masternode\n\nV_i\n has to encrypt the array \nRecommend_i\n using a secret key \nSK_i\n, say\n\nSecret_i = Encrypt (Recommend_i, SK_i)\n. Next, each masternode forms a\n\"\nlock\n\u201d message that contains encrypted secret array \nSecret_i\n; signs off this message with its blockchain\u2019s private key through the Elliptic Curve Digital Signature Algorithm (ECDSA) scheme currently used in Ethereum and Bitcoin along with the corresponding epoch index and its public key generated from its private key. By doing this, every\nmasternode can check who created this \nlock\n message through ECDSA verification scheme and which epoch\nit relates to. Then, each node \nV_i\n sends their \nlock\n message with its signature and public key to a\n\nSmart contract\n stored in the blockchain, so that\neventually each masternode collects and knows the \nlock\ns from all\nother masternodes.\n\n\n\n\n\n\nStep 2: Discovery and Recovery Phase:\n The recovery phase is for every node to reveal its previous lock message so that other nodes can get to know the secret array it has sent before. A masternode only starts revealing its lock message if all masternodes have sent their lock messages to the smart contract or a certain timeout event occurs. Each masternode then opens its lock message by sending an \u201d\nunlock\n\u201d message to the smart contract for other masternodes to open the corresponding lock. Imagine a commitment-like scheme in this case where a lock message is a commitment message locking its contained recommendation array \nRecommend_i\n (so that no one can open or guess the contained array), and the unlock message gives the key for other masternodes to decrypt the box and retrieve the values of \nRecommend_i\n. Eventually, a masternode has both locks and unlocks of others. If some elector is an adversary which might publish its lock but not intend to send the corresponding unlock, other masternodes can ignore the adversary\u2019s lock and set all its random values be \n1\n as default. The idea is simple: the network can keep working successfully even if some masternodes are adversaries.\n\n\n\n\n\n\nStep 3: Assembled Matrix and Computation Phase:\n At the point of\n    the slot \nn^{th}\n of the epoch \ne\n, the secret arrays \nSecret_I\n in\n    the smart contract will be decrypted by each masternode and return\n    the plain version of \nRecommend_i\n. Each tuple of the first \nn\n\n    numbers of each \nV_i\n will be assembled as the \ni^{th}\n column of an\n    \nn \\times m\n matrix. All the last number \n\\theta_i\n forms a\n    \nm\\times 1\n matrix. Then each nodes will compute the block verifiers\n    ordered list by some mathematical operations as explained below. The\n    resulting output is a matrix \nn \\times 1\n indicating the order of\n    block verifiers for the next epoch \ne+1\n.\n\n\n\n\n\n\nThe Second Masternode/Block Verifier\n\n\nThen, each node soon compute the common array \n\\nu_2\n for the order of\nthe block verifiers by the following steps as in the upper equation as belows.\nThen, \n\\nu_2\n is obtained by modulo operation of element values of\n\n\\nu'_2\n as in the lower equation in the followings:\n\n\n\n\n\\label{eq:matrix}\n\\begin{bmatrix} \\nu'_2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nv_{2.1}^{e+1} \\\\\nv_{2.2}^{e+1} \\\\\n\\vdots \\\\\nv_{2.n}^{e+1}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nr_{1.1}  & r_{2.1}            & \\cdots  & r_{m.1}  \\\\\nr_{1.2}     & r_{2.2}       & \\ddots  & \\vdots   \\\\\nr_{1.3}      &  \\ddots   & \\ddots  & r_{m.3}  \\\\\n\\vdots  &              & r_{m-1.n-1}  & r_{m.n-1}  \\\\\nr_{1.n}      & \\cdots      & r_{m-1.n}      & r_{m.n}\n\\end{bmatrix}   \n\\begin{bmatrix}\n\\theta_1  \\\\\n\\theta_2  \\\\\n\\theta_3 \\\\\n\\vdots  \\\\\n\\theta_m\n\\end{bmatrix}\n\n\n\n\n\n\n\\label{eq:eq2}\n\\begin{bmatrix} \\nu_2\n\\end{bmatrix}\n=\n\\begin{bmatrix} \\nu'_2 & mod & m\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\left| v_{2.1}^{e+1}\\right| & mod & m \\\\\n\\left| v_{2.2}^{e+1} \\right| & mod &  m\\\\\n\\vdots \\\\\n\\left| v_{2.n}^{e+1} \\right| & mod & m\n\\end{bmatrix}\n\n\n\n\nFinality Analysis\n\n\n\"There is a standard definition of \u201ctotal economic finality\u201d: it takes\nplace when \n\\frac{3}{4}\n of all masternodes make maximum-odds bets that\na given block or state will be finalized. This condition offers very\nstrong incentives for masternodes to never try colluding revert the\nblock: once masternodes make such maximum-odds bets, in any blockchain\nwhere that block or state is not present, the masternodes lose their\nentire deposit\"\n (see \nhere\n.\n\n\nTomochain\n keeps that standardization in the design so that one block is considered\nas irreversible if it collects at least \n\\frac{3}{4}\n signatures of all\nmasternodes committee. The time-line of blockchain creation process,\nchecking finality and mark the block as immutable is described as in\nFigure: \nChainMaking\n below.\n\n\n\n\nConsensus Protocol: Formalization\n\n\nBasic Concepts \n Protocol Description\n\n\nIn order to have a solid foundation for us to prove that our blockchain can achieve what are claimed, we first present our preliminary formalizations of the concepts that will be used in our yellow paper later. \n\n\nTo start, as we are dealing with proof of stake consensus algorithm, we\nfollow the way of formalization in the recent works in the literature\nlike \u00a0\nCardano\n and \u00a0\nhere\n and here \nhere\n. In particular, we\nrecall the following concepts and definitions that were presented\nin\u00a0\nCardano\n and adapt them to the context of Tomochain.\n\n\nTime, Slots, Epoch\n\n\nAs previously described, ideally, each epoch is divided into 900 block time, that is called block slot.\nOnly one block can be created in a slot. We assume that there is a roughly synchronized clock that allows for masternodes to learn the current slot. This simplification will effectively permit masternodes to execute the signing and validation process of the PoSV consensus, where each masternode must collectively create a block to the current slot. For more simplification, each slot \nsl_r\n is accessed by an integer \nr \\in \\{1, 2, ...990\\}\n, and suppose that the real time window that corresponds to each slot has the following properties, which are similar to what are specified in \nCardano\n.\n\n\n\n\n\n\nEvery masternode can determine the index of the current slot based on the current time and \u201dany discrepancies between parties\u2019 local time are insignificant in comparison with the length of time represented by a slot\u201d \nCardano\n\n\n\n\n\n\nThe amount of a slot time is sufficient to guarantee that any message transmitted by an honest party at the beginning of the time window will be received by any other honest party by the end of that time window. While this assumption similar to \nCardano\n, Tomochain requires it in order for a block creator to propagate its created block to the corresponding block verifier to ensure that the block is signed by both the masternodes before the next block creator builds another block on top of it.\n\n\n\n\n\n\nAs mentioned in Section\u00a0\nTomochainOverview\n, in our setting, we assume that the fixed collection of \nm\n (99) masternodes\n\nV_1, V_2, ...., V_m\n interact throughout the protocol. \nFor each \nV_i\n a public/private key pair (\npk_i\n,\nsk_i\n) for a prescribed signature scheme, ideally ECDSA, is generated. Furthermore, we assume that the public keys \npk_1\n,..,\npk_m\n of the masternodes are distributed and known by all of them (that means a masternode knows all public keys of other nodes). Some notable definitions of the blockchain concepts are defined following the notation in \nhere\n.\n\n\n\n\n\n\nState\n A state (defined as in \nhere\n) is an encoded string \nst \\in \\{0,1\\}^\\lambda\n.\n\n\n\n\n\n\nBlock\n A block (defined as in \nhere\n) \nB\n generated at a slot \n sl_i \\in \\{sl_1,...,sl_R\\}\n\ncontains the current state \nst \\in \\{0, 1\\}^{\\lambda}\n, data\n\nd \\in \\{0, 1\\}^{*}\n, the slot number \nsl_i\n and a signature\n\n\\Sigma  =  Sign_{ski} (st, d, sl_i)\n computed under \nsk_i\n\ncorresponding to the masternode \nV_i\n generating the block.\n\n\n\n\n\n\nBlockchain\n A blockchain (defined as in \nhere\n) \nC\n is a sequence of blocks \nB_1,..., B_n\n associated with a strictly increasing sequence of slots for which the state sti of \nB_i\n is equal to \nH(B_{i\u22121})\n, where \nH\n is a collision-resistant cryptography hash function. A blockchain has a number of properties, including the length of a chain \nlen(C) = n\n, which is its number of blocks, and the block \nB_n\n is the head of the chain, denoted \nhead(C)\n. \n\n\n\n\n\n\n\n\nAs mentioned earlier, in our \nTomochain\n model, we set each time \nslot\n \nsl_i\n as 2\nseconds; an epoch is a set \nR\n of 990 slots\n\n\\{ sl_1, sl_2, ..., sl_{990}\\}\n (an epoch time duration equals to 1980\nseconds).\n\n\nIn summary, the consensus protocol of \nTomochain\n can be formalized in Algorithm\u00a0ValidatorGeneration. The Algorithm\u00a0ValidatorGeneration is simulated and explained as a\nprocess shown in Fig. \nEpochProcess\n.\n\n\n\n\nSecurity Analysis\n\n\nNothing-at-stake\n\n\nNothing-at-stake is a well-known problem in PoS-based blockchain, just\nlike 51% attack in PoW algorithm. PoW-based miners require CapEx\n(capital expenditures) for buying mining equipment such as ASICs and\nOpEx (operation expenditures) such as electricity to solve mathematical\npuzzles securing the network (see \nhere\n). That means, there is always an\nintrinsic cost for miners in mining regardless of its success. In case\nof a fork, miners therefore always allocate their resource (equipment)\nto the chain that they believe is correct in order to get incentives for\ncompensating the intrinsic costs in mining.\n\n\nIn the contrary, in PoS-based systems without mining, during an ideal\nexecution, for creating a fork only costs, masternodes actually do not\nincur intrinsic costs, other than roughly some block validation and\nsigning cost. As a result, there\u2019s an inherent problem of the masternode\nhaving no downside to staking both forks. Therefore, there are actually\ntwo issues in the original design of PoS. On one hand, for any\nmasternode, the optimal strategy is to validate every chain/fork, so\nthat the masternode gets their rewards no matter which fork wins. On the\nother hand, for attackers/malicious masternodes, they can easily create\na fork for double spending.\n\n\nLet\u2019s look back how \nTomochain\n handles these two problems. As a reminder, \nTomochain\n maintains\na certain order of masternodes in creating and sealing blocks, in each\nepoch. For the first issue, random/arbitrary forks are hardly happened\nbecause the order of block creation masternodes is pre-determined for\neach epoch. Furthermore, the Double Validation mechanism eliminates the\nsecond issue because even one malicious masternode creates two blocks at\nhis turn, only one block then can be validated by the second randomly\nselected masternode.\n\n\nLong-range attack\n\n\nIn \nTomochain\n, block is valid only if it collects double validation and finalized\nonce \n\\frac{3}{4}\n of masternodes verify. Therefore, as long as the\nnumber of attackers or malicious nodes and/or fail-stop nodes is less\nequal than \n\\frac{1}{4}\n the number of masternodes, the number of\nmasternodes signing a block is at least \n\\frac{3}{4}\n the total number\nof masternodes, which makes the block finalized. Thus, there is no\nchance for one malicious masternode to create longer valid chain because\nother masternodes will refuse it.\n\n\nCensorship Attack\n\n\nIf there are more than \n\\frac{3}{4}\n malicious masternodes in \nTomochain\n,\ncensorship attack might happen. For example, these masternodes refuse\nvalid blocks or simply become inactive. In this case, chain is stuck.\n\n\nIn fact, masternodes are paid for their effort of correctly working so\nthat the chain is actively updated in a consistent manner. More\nimportantly, becoming masternode means a certain amount of tokens is\nlocked, 50 000 TOMO in particular. As a result, in order to control\nmore than\n\\frac{3}{4}\n masternodes, attackers must hold a considerable\namount of TOMO and gain huge support from token holders. And because of\nthis, the attackers do not have incentives to do any malicious action to\nharm the chain.\n\n\nHowever, in worst case, \nTomochain\n has to do a soft fork in order to reduce number\nof masternodes to keep the chain running and figure out slasher\nmechanisms for those malicious masternodes.\n\n\nRelay Attack\n\n\nTomochain\n supports \nEIP155\n\nTransactions in \nTomochain\n are included \nCHAIN\\_ID\n specified for different public\nchains. Table \ntable:chainid\n shows recognized \nCHAIN\\_ID\ns.\n\n\n\n\n\n\n\n\nCHAIN_ID\n\n\nChain(s)\n\n\n\n\n\n\n\n\n\n\n1\n\n\nEthereum mainnet\n\n\n\n\n\n\n2\n\n\nMorden (disused), Expanse mainnet\n\n\n\n\n\n\n3\n\n\nRopsten\n\n\n\n\n\n\n4\n\n\nRinkeby\n\n\n\n\n\n\n30\n\n\nRootstock mainnet\n\n\n\n\n\n\n31\n\n\nRockstock testnet\n\n\n\n\n\n\n42\n\n\nKovan\n\n\n\n\n\n\n61\n\n\nEthereum Classic mainnet\n\n\n\n\n\n\n62\n\n\nEthereum Classic testnet\n\n\n\n\n\n\n1337\n\n\nGeth private chains (default)\n\n\n\n\n\n\n77\n\n\nSokol, the public POA Network testnet\n\n\n\n\n\n\n99\n\n\nCore, the public POA Network main network\n\n\n\n\n\n\n88\n\n\nMainnet\n\n\n\n\n\n\n89\n\n\nTestnet\n\n\n\n\n\n\n\n\nSafety and liveness\n\n\nSafety implies having a single agreed upon chain where there are not two\nor more competing chains with valid transactions in either (see \nhere\n. A\nconsensus protocol can be \nsafe\n when blocks have settlement finality,\nor else probabilistic finality. This last sentence reveals that can\nprovide safety because it has a settlement finality.\n\n\nA consensus protocol is considered \nlive\n if it can eventually propagate\nand make valid transactions onto the blockchain (see \nhere\n. An occurrence\nof a liveness fault is when transaction omission, information\nwithholding, or message reordering, among a number of violations are\nobserved. This type of fault is unlikely to happen in \nTomochain\n because the block\ncreation masternodes list is ordered in a pre-determined way for each\nepoch, thus if even an attacking masternode omits some transactions, the\nlatter will be processed and validated by the next honest masternode in\nthe next block.\n\n\nDDOS Attack\n\n\nMasternodes are encouraged to run in well-known public cloud providers\nsuch as AWS, Google Cloud or Microsoft Azure which provides multiple\nDDOS prevention mechanisms. Even in case that some nodes are attacked or\nfail-stop, the network still works correctly as long as the number of\nfailing and/or attacked nodes is less than 1/4 of the number of\nmasternodes.\n\n\nSpam Attack\n\n\nTomochain\n keeps the same transaction fee mechanism as Ethereum which is indicated\nvia gasPrice. However, \nTomochain\n supports minimum transaction fee (at 1 wei),\nwhich somehow enables spamming that attacker tries to broadcast a huge\namount of low fee transactions to the system. However, \nTomochain\n masternodes\nalways sort transactions and pick up only high fee transactions into the\nproposing block. Thus, spammers have little chance to harm the system.\n\n\nRelated work\n\n\nConsensus plays an important role to guarantee the success of\ndistributed and decentralized systems. Bitcoin\u2019s core consensus\nprotocol, often referred to as Nakamoto consensus\u00a0\nBitcoin\n, realizes a\n\u201creplicated state machine\u201d abstraction, where nodes in a permissionless\nnetwork reach agreement about a set of transactions committed as well as\ntheir ordering \u00a0(see \nhere\n. However, known permissionless consensus\nprotocols such as Bitcoin\u2019s Nakamoto consensus come at a cost. Bitcoin\nand Ethereum rely on PoW to roughly enforce the idea of \u201cone vote per\nhashpower\u201d and to defend against Sybil attacks. Unfortunately, PoW-based\nBitcoin and Ethereum are known to have terrible performance (Bitcoin\u2019s\ntransaction processing performance is at peak of around 7 transactions\nper second as previously mentioned). Moreover, PoW is much criticized\nbecause it costs a lot of electricity energy.\n\n\nIn order to design an efficient and cost-effective consensus protocol in\nthe permissionless model, PoS has been discussed extensively in the\nBitcoin and \nEthereum forum\n. A PoS blockchain can\nsubstitute the costly PoW in Nakamoto\u2019s blockchain while still providing\nsimilar guarantees in terms of transaction processing in the presence of\na dishonest minority of users, where this \u201cminority\u201d is to be understood\nhere in the context of stake rather than computational\npower\u00a0\nCardano\n. The Ethereum design \nCasper\n, published by\nButerin \n Griffith, provides as its initial version a PoW/PoS hybrid\nconsensus protocol, which might eventually switch to a pure PoS system.\nAs in \nTomochain\n, Ethereum Casper requires that \nvalidators\n (term similar to\nblock creators) have to deposit an amount. In fact, some concepts used\nin \nTomochain\n such as checkpoint blocks are borrowed from Casper. Our (PoSV)\nconsensus protocol proposed in this paper can be seen as a hybrid model.\nIn particular, first, we apply with voting and \nDouble Validation\n to\ncreate, verify and vote for blocks smoothly and efficiently. Whenever\npotentials of fork branches are detected, we employ the idea in PoW to\nselect the longest branch with the most votes and discard the other\nbranches. This hybrid approach not only increases the\nperformance and security of blockchain, but also reduces the fork\nsituation in an efficient and practical manner.\n\n\nRecently, there are several consensus protocol research works that are\nclosely related to \nTomochain\n such as \nEOS\n and Ouroboros of\n\nCardano\n. The mechanism of \nvoting\n for masternodes for\nreaching consensus is utilized by \nBitshares\n and \nEOS\n,\nwhose consensus protocol is termed \nDelegated Proof-of-Stake\n (DPoS).\nDPoS is similar to the Proof-of-Stake Voting consensus of \nTomochain\n in the sense\nthat masternodes (block creators or \nwitnesses\n in DPoS) are elected\nthrough a voting system. However, \nTomochain\n requires that masternodes need to\ndeposit a required minimum amount of TOMO to become a masternode\ncandidate, which puts more pressure on the masternodes to work honestly.\nFurthermore, the \nDouble Validation\n mechanism of \nTomochain\n lowers the\nprobability of handshaking attacks and having invalid blocks, as\npreviously analyzed. EOS also has a maximum of 21 block producers for\neach epoch, which is \nless decentralized\n than \nTomochain\n with a maximum of 99\nmasternodes elected.\n\n\nThe research-backed \nCardano\n blockchain solution, namely\nOuroboros, with the ADA coin, which is purely based on Proof-of-Stake,\npromisingly claims to provide rigorous security guarantees. Similarly to\n\nTomochain\n, Ouroboros has a set of block producers for each epoch for creating\nblocks and each block producer candidate needs to deposit a minimum\namount of stake (an amount of ADA). However, note that, Ouroboros only\nprovides \nSingle Validation\n, while \nDouble Validation\n of \nTomochain\n provides\nseveral advantages over Single Validation, as previously analyzed. In\nOuroboros, the order of block producers, selected among stakers, is\nbased on a biased randomization while the Tomochain\u2019s randomization for block\nverifiers is potentially uniform and based on smart contracts.\nFurthermore, the use of voting as in Tomochain and DPoS enables a more incentive\nequality between stakers: In Ouroboros, stakers with very little stake\nhave a very small probability of becoming block creators, while, in Tomochain,\nthese stakers can choose an optimal strategy to vote for potential\nmasternodes to get incentives.\n\n\nConclusion and perspectives\n\n\nIn this paper, we proposed PoSV, a PoS Voting-based blockchain protocol\nwith heuristic and fair voting mechanism, rigorous security guarantees,\nand fast finality. We also presented a novel reward mechanism and show\nthat, with this mechanism, the blockchain has a low probability of\nhaving forks, fast confirmation time, plus the contributions and\nbenefits of masternodes are fair in the sense that the probability\ndistribution function is uniform eventually.\n\n\nPerspectives\n\n\n\n\n\n\nFuture work\n The \nTomochain\n team is currently working on the implementation\n    of the Proof-of-Stake Voting, which will be released on schedule as\n    stated in our roadmap. Furthermore, in parallel with our novel\n    consensus protocol, we will investigate the Sharding mechanism in\n    order to provide even better transaction processing performance. We\n    believe that, the Sharding technique with the stable number of\n    masternodes will provide better stability and efficiency to\n    the blockchain. At the same time, we commit to keep EVM-compatible\n    smart contracts within our masternode sharding framework.\n\n\n\n\n\n\nEconomic sustainability\n is also an important concept for a\n    blockchain based decentralized network. That means to maintain the\n    network in a sustainable condition, an equilibrium needs to be\n    achieved, in which the cost of running the network infrastructure\n    could be offset by the revenues generated. In this context, the cost\n    of network infrastructure consists of two parts: the physical cost\n    of having hardware such as servers, memories that passes the network\n    technical requirements; and the capital cost of having TOMO locked\n    into smart-contracts. The revenues for Masternodes would primarily\n    come from Reward Engine emission, and later on from service revenues\n    such as token exchange fees provided by applications running on top\n    of TomoChain. We will publish a TomoChain economic analysis and\n    proposal, separate from this technical paper in a later date.\n\n\n\n\n\n\n References\n\n\nSatoshi Nakamoto. Bitcoin: A peer-to-peer electronics cash system. 2008. \npdf\n\n\nEthereum Foundation. Ethereum\u2019s White Paper. , 2014. Online available 25/05/2018. \nlink\n.\n\n\nD. Larimer. Delegated Proof-of-Stake (DPOS). BitShare White Paper 2014. \nlink\n.\n\n\nS. King and S. Nadal. PPCoin: Peer-to-peer crypto-currency with\nproof-of-stake. Self-Published, 2012. \npdf\n\n\nV. Buterin. On public and private blockchains. Ethereum Blog, 2015. \nlink\n.\n\n\nA. Kiayias, A. Russell, B. David, and R. Oliynykov: Ouroboros: A\nProvably Secure Proof-of-Stake Blockchain Protocol. IACR-CRYPTO-2017.\npdf\n\n\nD. Mingxiao, et al. A Review on Consensus Algorithms of Blockchain. 2017\nIEEE International Conference on Systems, Man, and Cybernetics (SMC)\nBanff Center, Banff, Canada, October 5-8, 2017\nlink\n\n\nR. Pass and E. Shi. Rethinking Large-Scale Consensus. In the Proceedings\nof the IEEE 30th Computer Security Foundations Symposium, 2017. Thunder\nToken Foundation: Thunder Consensus White Paper, Janurary, 2018\npdf\n.\n\n\nR. Pass, L. Seeman, and A. Shelat. Analysis of the Blockchain Protocol\nin Asynchronous Networks. In EUROCRYPTO 2017\npdf\n.\n\n\nJuan A. Garay, A. Kiayias, and N. Leonardos. The bitcoin backbone\nprotocol: Analysis and applications. In Elisabeth Oswald and Marc\nFischlin, editors, Advances in Cryptology - EUROCRYPT 2015, Volume 9057\nof Lecture Notes in Computer Science, pages 281\u2013310. Springer, 2015\npdf\n.\n\n\nTendermint Team. Understanding the Basics of a Proof-of-Stake Security\nModel.\nlink\n.\n\n\nV. Buterin. On Settlement Finality. \nlink\n.\n\n\nEOS Team. EOS.IO Technical White Paper v2.\n\nhttps://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md\n.\nOnline available 25/05/2018. \nlink\n\n\nBitshares Team. Delegated Proof-of-Stake Consensus.\nhttps://bitshares.org/technology/delegated-proof-of-stake-consensus/.\nOnline available 25/05/2018. \nlink\n\n\nR. Pass, and E. Shi. (2017). Hybrid consensus: Efficient consensus in\nthe permissionless model. In LIPIcs-Leibniz International Proceedings in\nInformatics (Vol. 91). Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik \npdf\n.\n\n\nV. Buterin, and V. Griffith. (2017). Casper the Friendly Finality\nGadget. arXiv preprint arXiv:1710.09437. \nlink\n\n\nH. McCook. Under the Microscope: Economic and Environmental Costs of\nBitcoin Mining.\n\nlink", 
            "title": "Technical Whitepaper"
        }, 
        {
            "location": "/whitepaper/#introduction", 
            "text": "version 1.0 ( pdf version )  The blockchain industry and the infrastructure of the Internet of Value\nare being built rapidly around the globe, and to many the atmosphere is\neerily similar to the building of the Internet in the late \u201890s, with\npioneers and dreamers coming together to build a new future.  Tomochain  can be a\nleading part of this phenomenon through seamlessly merging an ecosystem\nof applications with cryptographic tokens used by millions of mainstream\nusers with a unique blockchain infrastructure architecture allowing for\na fast, secure, frictionless payment and trusted store of value.  Distributed systems have been researched in a \u201c permissioned setting \u201d\nwhere the number of participants in the system and their identities are\ncommon knowledge. In 2008, Satoshi Nakamoto - \u201cproposed his celebrated\n\u201cblockchain protocol\u201d which attempts to achieve consensus in a\npermissionless setting: anyone can join (or leave) the protocol\nexecution (without getting permission from a centralized or distributed\nauthority), and the protocol instructions do not depend on the\nidentities of the players\u201d (see  here ). Later on, Ethereum with its\nEthereum Virtual Machine (EVM) proposed several significant enhancements\ncompared to Bitcoin, including Smart Contracts. Both Bitcoin and\nEthereum have some issues, especially with transaction processing\nperformance. In order to construct an efficient and secured consensus\nprotocol for  Tomochain , we tackle the following main bottlenecks of classic\nblockchains:    Efficiency:  Existing blockchains as employed by major\n    crypto-currencies(e.g., Bitcoin or Ethereum) do not scale well to\n    handle a large transaction volume, e.g. Bitcoin and Ethereum can\n    handle around 10 transactions/second. This small throughput severely\n    hinders a wide-spread adoption of such crypto-currencies.    Confirmation times:  The 10 minutes  Bitcoin  block-time is significantly larger than network latency.\n    Furthermore, a Bitcoin block requires 5 subsequent blocks following\n    it so that it can be confirmed; thus it takes on average one hour\n    for a transaction to be confirmed (with low confidence). While\n    Ethereum uses a smaller block-time, the average confirmation time\n    still remains relatively high, around 13 minutes\n     Cardano . These long confirmation times hinder many important\n    applications (especially smart contract applications).    Fork Generation:  The problem of fork chain consumes\n    computational energy, time, and creates potential vulnerabilities\n    for different types of attacks.    With the motivation as mentioned above, our persistent and ultimate goal\nof research is to propose the consensus protocol focusing on the\nfollowing key strategies:    Double Validation to strengthen security and reduce fork    Randomization to guarantee the fair and prevent handshaking attack    Fast confirmation time and efficient checkpoints for finality or\n    rebase    To start dealing with these problems, in this paper, we present an\noverview architectural design of Tomochain\u2019s master nodes. In particular, we\npropose (PoSV) consensus, a Proof-of-Stake (PoS)-based blockchain\nprotocol with a fair voting mechanism, rigorous security guarantees and\nfast finality. We also present a novel reward mechanism and show that,\nwith this mechanism, the blockchain has a low probability of forks, fast\nconfirmation times, plus the contributions and benefits of masternodes\nare fair in the sense that the probability distribution function is\nuniform eventually.", 
            "title": "Introduction"
        }, 
        {
            "location": "/whitepaper/#structure-of-the-remainder-of-the-paper", 
            "text": "Section  Tomochain Overview : explains the intuition ideas and\noverview architectural design of masternodes, framework and background\nprotocols that help mass readers (e.g., investors, traders, others) who\nmay not have technical knowledge understand our mechanism easily.  Section  Stakeholders   Voting  presents  Tomochain  stakeholder policy, masternode\ncommittee voting systems, and reward mechanism.  Section  Tomochain consensus protocol  explains the motivation and double\nvalidation process as well as finality checkpoint of the protocol.   In Section\u00a0 Protocol formalizations , we present the formalization of our model in a mathematical way to show the soundness of our model and protocol.   Section\u00a0 Security Analysis  discusses the security analysis and resistant strain of potential attacks.   We discuss and compare  Tomochain  with several existing blockchains in Section  related work .   Finally, we conclude the paper in Section  Conclusion .", 
            "title": "Structure of the remainder of the paper"
        }, 
        {
            "location": "/whitepaper/#Sec:MasternodeDesign", 
            "text": "", 
            "title": "Tomochain Masternode Design"
        }, 
        {
            "location": "/whitepaper/#Sec:TomochainOverview", 
            "text": "The  Tomochain  blockchain is produced and maintained by a set of  masternodes  in a\nconsistent manner through the  Tomochain consensus  protocol as shown in Fig. architecture . These masternodes are full nodes that hold TOMO.\nFor a token holder to become a masternode, two requirements must be\nsatisfied:    The token holder must hold at least a minimum required amount of tokens\n    (see next section for more details).    The token holder must be one of the most voted masternode candidates\n    in the system. The voting by token holders is credited through a\n     Voting DApp  that allows token holders to  send TOMO through the\n    smart contract mechanism .    In addition to the voting system which is an improvement over the\ncurrent Bitcoin and Ethereum blockchain, TomoChain also provides a new technique,\nnamely  Double Validation  complemented with a  Randomization \nmechanism. This new technique significantly decreases the probability of\nhaving invalid blocks in the blockchain. These enhancements and the\ncomponents of  Tomochain  are step-by-step detailed in the followings.", 
            "title": "The Tomochain architecture"
        }, 
        {
            "location": "/whitepaper/#Sec:StakeVoting", 
            "text": "", 
            "title": "Stakeholders &amp; Voting"
        }, 
        {
            "location": "/whitepaper/#coin-holders-masternodes", 
            "text": "Token holder is as simple as its name: users who join the network, who\nown and transfer TOMO. Masternodes are full-nodes which maintain a\ncopy of the blockchain, produce blocks and keep the chain consistent. It\nis worth noting that,  Tomochain  does not have miners as in the current\nProof-of-Work-based blockchain systems such as Bitcoin and Ethereum.\nOnly masternodes can produce and validate blocks.  Masternodes are selected via a voting system. The first requirement of\nbeing masternodes is to deposit 50 000 TOMO to the Voting Smart\nContract. Then, these depositors are listed as masternode candidates in\nthe Voting DApp, which allows token holders to vote for them by sending\nTOMO to the smart contract.  Masternodes which work hard in the system to create and verify blocks\nwill be incentivized with TOMO. Furthermore, token holders who vote for\nthese incentivized masternodes will also receive TOMO in proportion to\nthe amount of TOMO they have invested via ballots.  Tomochain  engineers take\nresponsibility to design that fair, explicit, automated and accountable\nreward mechanism.  The list of masternode candidates is dynamically sorted based on voted\ntokens. The performance of the masternodes will be tracked and reported\nback to the token holders in terms of three main metrics: CPU/Memory\ncharts which ensure the workload of the masternodes, the number of\nsigned blocks which indicates their work performance and the last signed\nblock which figures out their last activity. Token holders, at any time,\ncan unvote masternodes, who have low performance, and give their votes\nto the other masternodes who have beter performance. Token holders have\nincentives to do that because their voted tokens are seen as investment\nto their supported masternodes, thus they should choose a voting\nstrategy in order to maximize their profit from the investment.  This simple trick keeps the system healthy since masternodes always have\nto race for their position so that all weak masternodes will eventually\nbe eliminated. Therefore, only the strongest masternodes are voted and\ncan flourish.", 
            "title": "Token holders, Masternodes"
        }, 
        {
            "location": "/whitepaper/#voting-masternode-committee", 
            "text": "There are maximum ninety-nine masternodes elected in the masternode\ncommittee. The required amount of deposit for masternode role is set at\n50 000 TOMO. This amount is locked in a  voting smart contract . Once\na masternode is demoted (by not remaining in the top ninety-nine voted\nmasternodes) or intentionally quits the masternode candidates\nlist/masternode committee, the deposit will have been locked for a\nmonth.  Token holders can vote at any time, by any number of votes (which is\nactually counted by the amount of TOMO they bet on some masternode\ncandidates). They can use masternode\u2019s performance statistics in the\ngovernance  Voting DApp  as reference information to give votes. The set\nof masternodes is dynamically sorted by the amount of TOMO and counted\nup to ninety-nine, upon reception of votes.", 
            "title": "Voting &amp; Masternode Committee"
        }, 
        {
            "location": "/whitepaper/#reward-mechanism", 
            "text": "For each iteration of 900 blocks (called epoch), a checkpoint block is\ncreated, which implements only reward works. The masternode, who takes\nturn in the circular and sequential order to create blocks, has to scan\nall of the created blocks in the epoch and count number of signatures.\nThe reward mechanism is designed following the policy as follows: the\nhigher number of signatures one masternode has made, the more reward he\nearns. For instance, within an epoch, masternode A who has sealed twice\nthe blocks than masternode B earns double amount of TOMO than\nmasternode B does.  Furthermore, there is also a reward sharing ratio among token holders and\nmasternode who has been elected supported by the token holders. For\nexample, within an epoch, one masternode receives  X  TOMO. Ten\npercent of  X  is sent to the masternode\u2019s address. Eighty percent of X  is shared in proportion to the amount of tokens deposited and voted\nby the masternode and token holders, respectively. The last ten percent\nof  X  credits to the  Tomochain  foundation. oken holders who unvote before the\ncheckpoint block will not receive any shared reward.", 
            "title": "Reward Mechanism"
        }, 
        {
            "location": "/whitepaper/#Sec:ProtocolOverview", 
            "text": "", 
            "title": "Tomochain Consensus Protocol"
        }, 
        {
            "location": "/whitepaper/#double-validation-process", 
            "text": "In TomoChain, masternodes share equal responsibility to run the system and keep\nit stable. Full nodes should run on powerful hardware configuration and\nhigh-speed network connectivity in order to ensure the required block\ntime (target to two seconds). Only masternodes can produce and seal\nblocks. In order for that, the  Tomochain  consensus relies on the concept of Double Validation  that improves some existing consensus mechanisms,\nnamely  Single Validation . In the followings, we first describe the Double Validation , then analyze the differences and improvements of Double Validation  compared to  Single Validation .", 
            "title": "Double Validation Process"
        }, 
        {
            "location": "/whitepaper/#double-validation-dv", 
            "text": "Similar to some existing PoS-based blockchains such as  Cardano , each\nblock is created by a block producer, namely masternode, that takes its\nblock creation permission turn following a pre-determined and circular\nsequence of masternodes for each epoch. However, differently from these\nexisting blockchains, DV in  Tomochain  requires the signatures of two masternodes\non a block to be able to push the block to the blockchain. One of the\nmasternodes is the  block creator  while the other one, namely  block\nverifier  is randomly selected among the set of voted masternodes that\nvalidates the block and signs it. In the followings, for more\nconvenience,  block creator  and  block verifier  are used\ninterchangeably for the masternode 1 (block producer) and the randomly\nselected masternode 2 for a block, respectively. The process of randomly\nselecting the block verifiers is detailed in the next paragraphs. Note\nthat, there is no mining in the block creation as in Proof-of-Work-based\nblockchains (e.g. Ethereum and Bitcoin). It means that a created block\nis valid if and only if it is sealed by enough two signatures from a\nblock creator and a corresponding block verifier to confirm the\ncorrectness of it.  We believe this DV technique enhances the stability of the blockchain by\ndiminishing the probability of producing \u201cgarbage\u201d blocks while still\nmaintaining the system security and consistency. Randomization of block\nverifiers in DV is the key factor of reducing risks coming from paired\nmasternodes trying to commit malicious blocks. Furthermore, comparing to\nsome current public blockchains in the market, by utilizing the DV\ntechnique,  Tomochain  brings significant improvements in the block time by only\nrequiring two signatures per block. For the purpose of showing our\nenhancement over existing PoS-based blockchains, we analyze the\ndifferences between DV and the Single Validation mechanism in some\nexisting blockchains as follows.", 
            "title": "Double Validation (DV)"
        }, 
        {
            "location": "/whitepaper/#improvements-of-double-validation-over-single-validation", 
            "text": "Let\u2019s show the improvements of DV compared to Single Validation through\nanalyzing some attacking scenarios as shown in Fig. Single Validation example  and Fig.  Double Validation example .   Single Validation  In Single Validation, in an epoch, each\n    masternode, e.g. M1, sequentially takes its turn to create a\n    block, e.g. block100. The next masternode, e.g. M2, in the sequence\n    then validates the created block100. If block100 is invalid (that\n    potentially means that M1 is an attacker) and contains a transaction\n    that invalidly benefits M1, if M2 is honest (see Fig.\n     SV a ), it rejects block100 and creates\n    another block100 next to block99. But, if M2 is an attacker\n    (see Fig.  SV b ) that corporates with M1,\n    M2 ignores the invalidation of block100, signs it and creates next\n    block, namely block101 that is valid. Then, the next masternode M3\n    verifies that block101 is valid, M3 signs block101 and creates a\n    block102. By this way, Single Validation potentially leaves the\n    blockchain with \u201cgarbage\u201d or invalid blocks which require a \u201crebase\u201d\n    to restore the validity of the blockchain.   Single Validation (SV): (a) SV with block creation masternode as an attacker and (b) SV with two consecutive block creation masternodes as attackers   Double Validation  We claim that our DV technique significantly\n    reduces the probability of having garbage blocks in the blockchain.\n    Assuming that M1 and M2 are the block creator and block verifier,\n    respectively, for block100 in our DV. If block100 is invalid and M2\n    is honest (see Fig.  DV a ), M2 will not\n    seal this block. Therefore, the next block creator M3 for creating\n    block101 will see that block100 does not have enough 2 signatures,\n    thus reject block100 and create another block100 next to block99. On\n    the other hand, if M2 is also an attacker pairing/handshaking with\n    M1 (see Fig.  DV b ), M2 signs block100\n    despite its invalidity (remember that the block verifier M2 is\n    randomly selected, there has little chance of successfully pairing\n    M1 and M2). Next, even though M3 will verify that block100 has two\n    valid signatures, M3 still rejects it because block100 is\n    invalidated by M3 that will create another valid block100. In order\n    to break the stability and consistency of the blockchain in this\n    case, M3 should be an attacker together with M1 and M2, which,\n    however, has a very low probability. In other words, DV strengthens\n    the consistency of the blockchain and makes it hard to break.   Double Validation (DV): (a) DV with block creator as an attacker and (b) DV with both block creator and block verifier as attackers", 
            "title": "Improvements of Double Validation over Single Validation"
        }, 
        {
            "location": "/whitepaper/#randomization-for-block-verifiers-for-double-validation", 
            "text": "", 
            "title": "Randomization for Block Verifiers for Double Validation"
        }, 
        {
            "location": "/whitepaper/#the-first-masternodeblock-creator", 
            "text": "The first masternode/block creator in a given epoch  e  can be selected\nby a round-turn game and can be formal defined as an array:   \\begin{bmatrix} \n\\nu_1\n\\end{bmatrix}\n= \\begin{bmatrix} \nV_{1.1}^e  \\\\\nV_{1.2}^e\\\\\n\\cdot\\\\\n\\cdot\\\\\n\\cdot\\\\\nV_{1.n-1}^e\\\\\nV_{1.n}^e\\\\\n\\end{bmatrix}", 
            "title": "The First Masternode/Block Creator"
        }, 
        {
            "location": "/whitepaper/#random-matrix-and-smart-contract", 
            "text": "Let  m  be the number of masternodes,  n  be the number of slots in an\nepoch. In order to randomly generate the block verifiers for the next\nepoch  e+1 , the process is performed by the following steps.    Step 1: Random Numbers Generation and Commitment Phase:  First, at the beginning of epoch  e , each masternode  V_i  will\nsecurely create an array of  n+1  special random numbers  Recommend_i= [ r_{i.1}, r_{i.2}, ..., r_{i.n}, \\theta_i] , where r_{i.k}\\in [1, ..., m]  indicating the recommendation of ordered\nlist of block verifiers for the next epoch of  V_i , and \\theta_i \\in \\{-1, 0, 1\\}  is used for increasing the\nunpredictability of the random numbers. Second, each masternode V_i  has to encrypt the array  Recommend_i  using a secret key  SK_i , say Secret_i = Encrypt (Recommend_i, SK_i) . Next, each masternode forms a\n\" lock \u201d message that contains encrypted secret array  Secret_i ; signs off this message with its blockchain\u2019s private key through the Elliptic Curve Digital Signature Algorithm (ECDSA) scheme currently used in Ethereum and Bitcoin along with the corresponding epoch index and its public key generated from its private key. By doing this, every\nmasternode can check who created this  lock  message through ECDSA verification scheme and which epoch\nit relates to. Then, each node  V_i  sends their  lock  message with its signature and public key to a Smart contract  stored in the blockchain, so that\neventually each masternode collects and knows the  lock s from all\nother masternodes.    Step 2: Discovery and Recovery Phase:  The recovery phase is for every node to reveal its previous lock message so that other nodes can get to know the secret array it has sent before. A masternode only starts revealing its lock message if all masternodes have sent their lock messages to the smart contract or a certain timeout event occurs. Each masternode then opens its lock message by sending an \u201d unlock \u201d message to the smart contract for other masternodes to open the corresponding lock. Imagine a commitment-like scheme in this case where a lock message is a commitment message locking its contained recommendation array  Recommend_i  (so that no one can open or guess the contained array), and the unlock message gives the key for other masternodes to decrypt the box and retrieve the values of  Recommend_i . Eventually, a masternode has both locks and unlocks of others. If some elector is an adversary which might publish its lock but not intend to send the corresponding unlock, other masternodes can ignore the adversary\u2019s lock and set all its random values be  1  as default. The idea is simple: the network can keep working successfully even if some masternodes are adversaries.    Step 3: Assembled Matrix and Computation Phase:  At the point of\n    the slot  n^{th}  of the epoch  e , the secret arrays  Secret_I  in\n    the smart contract will be decrypted by each masternode and return\n    the plain version of  Recommend_i . Each tuple of the first  n \n    numbers of each  V_i  will be assembled as the  i^{th}  column of an\n     n \\times m  matrix. All the last number  \\theta_i  forms a\n     m\\times 1  matrix. Then each nodes will compute the block verifiers\n    ordered list by some mathematical operations as explained below. The\n    resulting output is a matrix  n \\times 1  indicating the order of\n    block verifiers for the next epoch  e+1 .", 
            "title": "Random Matrix and Smart Contract"
        }, 
        {
            "location": "/whitepaper/#the-second-masternodeblock-verifier", 
            "text": "Then, each node soon compute the common array  \\nu_2  for the order of\nthe block verifiers by the following steps as in the upper equation as belows.\nThen,  \\nu_2  is obtained by modulo operation of element values of \\nu'_2  as in the lower equation in the followings:   \\label{eq:matrix}\n\\begin{bmatrix} \\nu'_2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nv_{2.1}^{e+1} \\\\\nv_{2.2}^{e+1} \\\\\n\\vdots \\\\\nv_{2.n}^{e+1}\n\\end{bmatrix}\n=\n\\begin{bmatrix}\nr_{1.1}  & r_{2.1}            & \\cdots  & r_{m.1}  \\\\\nr_{1.2}     & r_{2.2}       & \\ddots  & \\vdots   \\\\\nr_{1.3}      &  \\ddots   & \\ddots  & r_{m.3}  \\\\\n\\vdots  &              & r_{m-1.n-1}  & r_{m.n-1}  \\\\\nr_{1.n}      & \\cdots      & r_{m-1.n}      & r_{m.n}\n\\end{bmatrix}   \n\\begin{bmatrix}\n\\theta_1  \\\\\n\\theta_2  \\\\\n\\theta_3 \\\\\n\\vdots  \\\\\n\\theta_m\n\\end{bmatrix}    \\label{eq:eq2}\n\\begin{bmatrix} \\nu_2\n\\end{bmatrix}\n=\n\\begin{bmatrix} \\nu'_2 & mod & m\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\left| v_{2.1}^{e+1}\\right| & mod & m \\\\\n\\left| v_{2.2}^{e+1} \\right| & mod &  m\\\\\n\\vdots \\\\\n\\left| v_{2.n}^{e+1} \\right| & mod & m\n\\end{bmatrix}", 
            "title": "The Second Masternode/Block Verifier"
        }, 
        {
            "location": "/whitepaper/#finality-analysis", 
            "text": "\"There is a standard definition of \u201ctotal economic finality\u201d: it takes\nplace when  \\frac{3}{4}  of all masternodes make maximum-odds bets that\na given block or state will be finalized. This condition offers very\nstrong incentives for masternodes to never try colluding revert the\nblock: once masternodes make such maximum-odds bets, in any blockchain\nwhere that block or state is not present, the masternodes lose their\nentire deposit\"  (see  here .  Tomochain  keeps that standardization in the design so that one block is considered\nas irreversible if it collects at least  \\frac{3}{4}  signatures of all\nmasternodes committee. The time-line of blockchain creation process,\nchecking finality and mark the block as immutable is described as in\nFigure:  ChainMaking  below.", 
            "title": "Finality Analysis"
        }, 
        {
            "location": "/whitepaper/#Sec:ProtocolFormalization", 
            "text": "", 
            "title": "Consensus Protocol: Formalization"
        }, 
        {
            "location": "/whitepaper/#basic-concepts-protocol-description", 
            "text": "In order to have a solid foundation for us to prove that our blockchain can achieve what are claimed, we first present our preliminary formalizations of the concepts that will be used in our yellow paper later.   To start, as we are dealing with proof of stake consensus algorithm, we\nfollow the way of formalization in the recent works in the literature\nlike \u00a0 Cardano  and \u00a0 here  and here  here . In particular, we\nrecall the following concepts and definitions that were presented\nin\u00a0 Cardano  and adapt them to the context of Tomochain.", 
            "title": "Basic Concepts &amp; Protocol Description"
        }, 
        {
            "location": "/whitepaper/#time-slots-epoch", 
            "text": "As previously described, ideally, each epoch is divided into 900 block time, that is called block slot.\nOnly one block can be created in a slot. We assume that there is a roughly synchronized clock that allows for masternodes to learn the current slot. This simplification will effectively permit masternodes to execute the signing and validation process of the PoSV consensus, where each masternode must collectively create a block to the current slot. For more simplification, each slot  sl_r  is accessed by an integer  r \\in \\{1, 2, ...990\\} , and suppose that the real time window that corresponds to each slot has the following properties, which are similar to what are specified in  Cardano .    Every masternode can determine the index of the current slot based on the current time and \u201dany discrepancies between parties\u2019 local time are insignificant in comparison with the length of time represented by a slot\u201d  Cardano    The amount of a slot time is sufficient to guarantee that any message transmitted by an honest party at the beginning of the time window will be received by any other honest party by the end of that time window. While this assumption similar to  Cardano , Tomochain requires it in order for a block creator to propagate its created block to the corresponding block verifier to ensure that the block is signed by both the masternodes before the next block creator builds another block on top of it.    As mentioned in Section\u00a0 TomochainOverview , in our setting, we assume that the fixed collection of  m  (99) masternodes V_1, V_2, ...., V_m  interact throughout the protocol. \nFor each  V_i  a public/private key pair ( pk_i , sk_i ) for a prescribed signature scheme, ideally ECDSA, is generated. Furthermore, we assume that the public keys  pk_1 ,.., pk_m  of the masternodes are distributed and known by all of them (that means a masternode knows all public keys of other nodes). Some notable definitions of the blockchain concepts are defined following the notation in  here .    State  A state (defined as in  here ) is an encoded string  st \\in \\{0,1\\}^\\lambda .    Block  A block (defined as in  here )  B  generated at a slot   sl_i \\in \\{sl_1,...,sl_R\\} \ncontains the current state  st \\in \\{0, 1\\}^{\\lambda} , data d \\in \\{0, 1\\}^{*} , the slot number  sl_i  and a signature \\Sigma  =  Sign_{ski} (st, d, sl_i)  computed under  sk_i \ncorresponding to the masternode  V_i  generating the block.    Blockchain  A blockchain (defined as in  here )  C  is a sequence of blocks  B_1,..., B_n  associated with a strictly increasing sequence of slots for which the state sti of  B_i  is equal to  H(B_{i\u22121}) , where  H  is a collision-resistant cryptography hash function. A blockchain has a number of properties, including the length of a chain  len(C) = n , which is its number of blocks, and the block  B_n  is the head of the chain, denoted  head(C) .      As mentioned earlier, in our  Tomochain  model, we set each time  slot   sl_i  as 2\nseconds; an epoch is a set  R  of 990 slots \\{ sl_1, sl_2, ..., sl_{990}\\}  (an epoch time duration equals to 1980\nseconds).  In summary, the consensus protocol of  Tomochain  can be formalized in Algorithm\u00a0ValidatorGeneration. The Algorithm\u00a0ValidatorGeneration is simulated and explained as a\nprocess shown in Fig.  EpochProcess .", 
            "title": "Time, Slots, Epoch"
        }, 
        {
            "location": "/whitepaper/#Sec:SecurityAnalysis", 
            "text": "", 
            "title": "Security Analysis"
        }, 
        {
            "location": "/whitepaper/#nothing-at-stake", 
            "text": "Nothing-at-stake is a well-known problem in PoS-based blockchain, just\nlike 51% attack in PoW algorithm. PoW-based miners require CapEx\n(capital expenditures) for buying mining equipment such as ASICs and\nOpEx (operation expenditures) such as electricity to solve mathematical\npuzzles securing the network (see  here ). That means, there is always an\nintrinsic cost for miners in mining regardless of its success. In case\nof a fork, miners therefore always allocate their resource (equipment)\nto the chain that they believe is correct in order to get incentives for\ncompensating the intrinsic costs in mining.  In the contrary, in PoS-based systems without mining, during an ideal\nexecution, for creating a fork only costs, masternodes actually do not\nincur intrinsic costs, other than roughly some block validation and\nsigning cost. As a result, there\u2019s an inherent problem of the masternode\nhaving no downside to staking both forks. Therefore, there are actually\ntwo issues in the original design of PoS. On one hand, for any\nmasternode, the optimal strategy is to validate every chain/fork, so\nthat the masternode gets their rewards no matter which fork wins. On the\nother hand, for attackers/malicious masternodes, they can easily create\na fork for double spending.  Let\u2019s look back how  Tomochain  handles these two problems. As a reminder,  Tomochain  maintains\na certain order of masternodes in creating and sealing blocks, in each\nepoch. For the first issue, random/arbitrary forks are hardly happened\nbecause the order of block creation masternodes is pre-determined for\neach epoch. Furthermore, the Double Validation mechanism eliminates the\nsecond issue because even one malicious masternode creates two blocks at\nhis turn, only one block then can be validated by the second randomly\nselected masternode.", 
            "title": "Nothing-at-stake"
        }, 
        {
            "location": "/whitepaper/#long-range-attack", 
            "text": "In  Tomochain , block is valid only if it collects double validation and finalized\nonce  \\frac{3}{4}  of masternodes verify. Therefore, as long as the\nnumber of attackers or malicious nodes and/or fail-stop nodes is less\nequal than  \\frac{1}{4}  the number of masternodes, the number of\nmasternodes signing a block is at least  \\frac{3}{4}  the total number\nof masternodes, which makes the block finalized. Thus, there is no\nchance for one malicious masternode to create longer valid chain because\nother masternodes will refuse it.", 
            "title": "Long-range attack"
        }, 
        {
            "location": "/whitepaper/#censorship-attack", 
            "text": "If there are more than  \\frac{3}{4}  malicious masternodes in  Tomochain ,\ncensorship attack might happen. For example, these masternodes refuse\nvalid blocks or simply become inactive. In this case, chain is stuck.  In fact, masternodes are paid for their effort of correctly working so\nthat the chain is actively updated in a consistent manner. More\nimportantly, becoming masternode means a certain amount of tokens is\nlocked, 50 000 TOMO in particular. As a result, in order to control\nmore than \\frac{3}{4}  masternodes, attackers must hold a considerable\namount of TOMO and gain huge support from token holders. And because of\nthis, the attackers do not have incentives to do any malicious action to\nharm the chain.  However, in worst case,  Tomochain  has to do a soft fork in order to reduce number\nof masternodes to keep the chain running and figure out slasher\nmechanisms for those malicious masternodes.", 
            "title": "Censorship Attack"
        }, 
        {
            "location": "/whitepaper/#relay-attack", 
            "text": "Tomochain  supports  EIP155 \nTransactions in  Tomochain  are included  CHAIN\\_ID  specified for different public\nchains. Table  table:chainid  shows recognized  CHAIN\\_ID s.     CHAIN_ID  Chain(s)      1  Ethereum mainnet    2  Morden (disused), Expanse mainnet    3  Ropsten    4  Rinkeby    30  Rootstock mainnet    31  Rockstock testnet    42  Kovan    61  Ethereum Classic mainnet    62  Ethereum Classic testnet    1337  Geth private chains (default)    77  Sokol, the public POA Network testnet    99  Core, the public POA Network main network    88  Mainnet    89  Testnet", 
            "title": "Relay Attack"
        }, 
        {
            "location": "/whitepaper/#safety-and-liveness", 
            "text": "Safety implies having a single agreed upon chain where there are not two\nor more competing chains with valid transactions in either (see  here . A\nconsensus protocol can be  safe  when blocks have settlement finality,\nor else probabilistic finality. This last sentence reveals that can\nprovide safety because it has a settlement finality.  A consensus protocol is considered  live  if it can eventually propagate\nand make valid transactions onto the blockchain (see  here . An occurrence\nof a liveness fault is when transaction omission, information\nwithholding, or message reordering, among a number of violations are\nobserved. This type of fault is unlikely to happen in  Tomochain  because the block\ncreation masternodes list is ordered in a pre-determined way for each\nepoch, thus if even an attacking masternode omits some transactions, the\nlatter will be processed and validated by the next honest masternode in\nthe next block.", 
            "title": "Safety and liveness"
        }, 
        {
            "location": "/whitepaper/#ddos-attack", 
            "text": "Masternodes are encouraged to run in well-known public cloud providers\nsuch as AWS, Google Cloud or Microsoft Azure which provides multiple\nDDOS prevention mechanisms. Even in case that some nodes are attacked or\nfail-stop, the network still works correctly as long as the number of\nfailing and/or attacked nodes is less than 1/4 of the number of\nmasternodes.", 
            "title": "DDOS Attack"
        }, 
        {
            "location": "/whitepaper/#spam-attack", 
            "text": "Tomochain  keeps the same transaction fee mechanism as Ethereum which is indicated\nvia gasPrice. However,  Tomochain  supports minimum transaction fee (at 1 wei),\nwhich somehow enables spamming that attacker tries to broadcast a huge\namount of low fee transactions to the system. However,  Tomochain  masternodes\nalways sort transactions and pick up only high fee transactions into the\nproposing block. Thus, spammers have little chance to harm the system.", 
            "title": "Spam Attack"
        }, 
        {
            "location": "/whitepaper/#Sec:relatedwork", 
            "text": "Consensus plays an important role to guarantee the success of\ndistributed and decentralized systems. Bitcoin\u2019s core consensus\nprotocol, often referred to as Nakamoto consensus\u00a0 Bitcoin , realizes a\n\u201creplicated state machine\u201d abstraction, where nodes in a permissionless\nnetwork reach agreement about a set of transactions committed as well as\ntheir ordering \u00a0(see  here . However, known permissionless consensus\nprotocols such as Bitcoin\u2019s Nakamoto consensus come at a cost. Bitcoin\nand Ethereum rely on PoW to roughly enforce the idea of \u201cone vote per\nhashpower\u201d and to defend against Sybil attacks. Unfortunately, PoW-based\nBitcoin and Ethereum are known to have terrible performance (Bitcoin\u2019s\ntransaction processing performance is at peak of around 7 transactions\nper second as previously mentioned). Moreover, PoW is much criticized\nbecause it costs a lot of electricity energy.  In order to design an efficient and cost-effective consensus protocol in\nthe permissionless model, PoS has been discussed extensively in the\nBitcoin and  Ethereum forum . A PoS blockchain can\nsubstitute the costly PoW in Nakamoto\u2019s blockchain while still providing\nsimilar guarantees in terms of transaction processing in the presence of\na dishonest minority of users, where this \u201cminority\u201d is to be understood\nhere in the context of stake rather than computational\npower\u00a0 Cardano . The Ethereum design  Casper , published by\nButerin   Griffith, provides as its initial version a PoW/PoS hybrid\nconsensus protocol, which might eventually switch to a pure PoS system.\nAs in  Tomochain , Ethereum Casper requires that  validators  (term similar to\nblock creators) have to deposit an amount. In fact, some concepts used\nin  Tomochain  such as checkpoint blocks are borrowed from Casper. Our (PoSV)\nconsensus protocol proposed in this paper can be seen as a hybrid model.\nIn particular, first, we apply with voting and  Double Validation  to\ncreate, verify and vote for blocks smoothly and efficiently. Whenever\npotentials of fork branches are detected, we employ the idea in PoW to\nselect the longest branch with the most votes and discard the other\nbranches. This hybrid approach not only increases the\nperformance and security of blockchain, but also reduces the fork\nsituation in an efficient and practical manner.  Recently, there are several consensus protocol research works that are\nclosely related to  Tomochain  such as  EOS  and Ouroboros of Cardano . The mechanism of  voting  for masternodes for\nreaching consensus is utilized by  Bitshares  and  EOS ,\nwhose consensus protocol is termed  Delegated Proof-of-Stake  (DPoS).\nDPoS is similar to the Proof-of-Stake Voting consensus of  Tomochain  in the sense\nthat masternodes (block creators or  witnesses  in DPoS) are elected\nthrough a voting system. However,  Tomochain  requires that masternodes need to\ndeposit a required minimum amount of TOMO to become a masternode\ncandidate, which puts more pressure on the masternodes to work honestly.\nFurthermore, the  Double Validation  mechanism of  Tomochain  lowers the\nprobability of handshaking attacks and having invalid blocks, as\npreviously analyzed. EOS also has a maximum of 21 block producers for\neach epoch, which is  less decentralized  than  Tomochain  with a maximum of 99\nmasternodes elected.  The research-backed  Cardano  blockchain solution, namely\nOuroboros, with the ADA coin, which is purely based on Proof-of-Stake,\npromisingly claims to provide rigorous security guarantees. Similarly to Tomochain , Ouroboros has a set of block producers for each epoch for creating\nblocks and each block producer candidate needs to deposit a minimum\namount of stake (an amount of ADA). However, note that, Ouroboros only\nprovides  Single Validation , while  Double Validation  of  Tomochain  provides\nseveral advantages over Single Validation, as previously analyzed. In\nOuroboros, the order of block producers, selected among stakers, is\nbased on a biased randomization while the Tomochain\u2019s randomization for block\nverifiers is potentially uniform and based on smart contracts.\nFurthermore, the use of voting as in Tomochain and DPoS enables a more incentive\nequality between stakers: In Ouroboros, stakers with very little stake\nhave a very small probability of becoming block creators, while, in Tomochain,\nthese stakers can choose an optimal strategy to vote for potential\nmasternodes to get incentives.", 
            "title": "Related work"
        }, 
        {
            "location": "/whitepaper/#Sec:Conclusion", 
            "text": "In this paper, we proposed PoSV, a PoS Voting-based blockchain protocol\nwith heuristic and fair voting mechanism, rigorous security guarantees,\nand fast finality. We also presented a novel reward mechanism and show\nthat, with this mechanism, the blockchain has a low probability of\nhaving forks, fast confirmation time, plus the contributions and\nbenefits of masternodes are fair in the sense that the probability\ndistribution function is uniform eventually.", 
            "title": "Conclusion and perspectives"
        }, 
        {
            "location": "/whitepaper/#perspectives", 
            "text": "Future work  The  Tomochain  team is currently working on the implementation\n    of the Proof-of-Stake Voting, which will be released on schedule as\n    stated in our roadmap. Furthermore, in parallel with our novel\n    consensus protocol, we will investigate the Sharding mechanism in\n    order to provide even better transaction processing performance. We\n    believe that, the Sharding technique with the stable number of\n    masternodes will provide better stability and efficiency to\n    the blockchain. At the same time, we commit to keep EVM-compatible\n    smart contracts within our masternode sharding framework.    Economic sustainability  is also an important concept for a\n    blockchain based decentralized network. That means to maintain the\n    network in a sustainable condition, an equilibrium needs to be\n    achieved, in which the cost of running the network infrastructure\n    could be offset by the revenues generated. In this context, the cost\n    of network infrastructure consists of two parts: the physical cost\n    of having hardware such as servers, memories that passes the network\n    technical requirements; and the capital cost of having TOMO locked\n    into smart-contracts. The revenues for Masternodes would primarily\n    come from Reward Engine emission, and later on from service revenues\n    such as token exchange fees provided by applications running on top\n    of TomoChain. We will publish a TomoChain economic analysis and\n    proposal, separate from this technical paper in a later date.", 
            "title": "Perspectives"
        }, 
        {
            "location": "/whitepaper/#Sec:References", 
            "text": "Satoshi Nakamoto. Bitcoin: A peer-to-peer electronics cash system. 2008.  pdf  Ethereum Foundation. Ethereum\u2019s White Paper. , 2014. Online available 25/05/2018.  link .  D. Larimer. Delegated Proof-of-Stake (DPOS). BitShare White Paper 2014.  link .  S. King and S. Nadal. PPCoin: Peer-to-peer crypto-currency with\nproof-of-stake. Self-Published, 2012.  pdf  V. Buterin. On public and private blockchains. Ethereum Blog, 2015.  link .  A. Kiayias, A. Russell, B. David, and R. Oliynykov: Ouroboros: A\nProvably Secure Proof-of-Stake Blockchain Protocol. IACR-CRYPTO-2017. pdf  D. Mingxiao, et al. A Review on Consensus Algorithms of Blockchain. 2017\nIEEE International Conference on Systems, Man, and Cybernetics (SMC)\nBanff Center, Banff, Canada, October 5-8, 2017 link  R. Pass and E. Shi. Rethinking Large-Scale Consensus. In the Proceedings\nof the IEEE 30th Computer Security Foundations Symposium, 2017. Thunder\nToken Foundation: Thunder Consensus White Paper, Janurary, 2018 pdf .  R. Pass, L. Seeman, and A. Shelat. Analysis of the Blockchain Protocol\nin Asynchronous Networks. In EUROCRYPTO 2017 pdf .  Juan A. Garay, A. Kiayias, and N. Leonardos. The bitcoin backbone\nprotocol: Analysis and applications. In Elisabeth Oswald and Marc\nFischlin, editors, Advances in Cryptology - EUROCRYPT 2015, Volume 9057\nof Lecture Notes in Computer Science, pages 281\u2013310. Springer, 2015 pdf .  Tendermint Team. Understanding the Basics of a Proof-of-Stake Security\nModel. link .  V. Buterin. On Settlement Finality.  link .  EOS Team. EOS.IO Technical White Paper v2. https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md .\nOnline available 25/05/2018.  link  Bitshares Team. Delegated Proof-of-Stake Consensus.\nhttps://bitshares.org/technology/delegated-proof-of-stake-consensus/.\nOnline available 25/05/2018.  link  R. Pass, and E. Shi. (2017). Hybrid consensus: Efficient consensus in\nthe permissionless model. In LIPIcs-Leibniz International Proceedings in\nInformatics (Vol. 91). Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik  pdf .  V. Buterin, and V. Griffith. (2017). Casper the Friendly Finality\nGadget. arXiv preprint arXiv:1710.09437.  link  H. McCook. Under the Microscope: Economic and Environmental Costs of\nBitcoin Mining. link", 
            "title": "References"
        }, 
        {
            "location": "/faq/general/", 
            "text": "General\n\n\n\n\nWhat is Tomocoin (TOMO)? How can I earn Tomocoin (TOMO)?\n\n\nTomoCoin (TOMO) is the native cryptocurrency to TomoChain, and will be the reserve cryptocurrency for all third-party apps running on TomoChain. Being the protocol token for the TomoChain infrastructure, TOMO will be needed by all parties utilising TomoChain to build apps or issue and integrate cryptographic tokens into their apps.\n\n\nThe supply of TOMO is fixed, long-term and non-inflationary. In addition to the above, TOMO is integral to the TomoChain network for a number of reasons: First, TOMO will be used to fund the development of TomoChain and TomoWallet; Second, TOMO will be used as a reward to incentivise the building of the Tomo engine/ecosystem; Third, TOMO will be used as a long-term, decentralized governance instrument of the Tomo network \u2013 the details of which will be announced in our upcoming technical white paper.\n\n\nTOMO is currently available on a number of exchanges.\n\n\n\n\nHow are the TOMO distributed?\n\n\nThe planned token allocation is as follows:\n\n\n\n\n55% goes to the token sale participants\n\n\n15% goes to the company, advisors and bounties\n\n\n30% goes to the Reward Engine/ Ecosystem Building program.\n\n\n\n\n\n\nCan I mine TOMO?\n\n\nTOMO is a non-mineable cryptocurrency.\n\n\n\n\nWhat is total supply and circulating supply of TOMO?\n\n\nTOMO total token supply is fixed at 100,000,000 TOMO. The current circulating supply is 55,000,000 TOMO\n\n\n\n\nHow can I send TOMO to my wallet?\n\n\nYou can store TOMO in wallet supporting ERC20 Standard. We recommend to store TOMO in MYETHERWALLET + TREZOR/LEDGER NANO S + METAMASK + Mist + Parity + Trust.\n\n\nTomocoin Token Address: 0x8b353021189375591723e7384262f45709a3c3dc\nToken Symbol: TOMO\nDecimals: 18\n\n\n\n\n\n\nWhat would your currency be if not an ERC20 token?\n\n\nTOMO will only be an ERC20 until the TomoChain mainnet launch.\n\n\n\n\nIs TOMO going to be swapped some day? If yes, how do I know I\u2019ll be able to swap my tokens if I take them from an exchange? How will you switch from an ERC20 token to your own?\n\n\nWe will lock your tokens before swapping to mainnet, so there is no chance of losing the tokens. Whilst tokens are locked, they are not transferable to another address.", 
            "title": "General"
        }, 
        {
            "location": "/faq/general/#general", 
            "text": "", 
            "title": "General"
        }, 
        {
            "location": "/faq/general/#what-is-tomocoin-tomo-how-can-i-earn-tomocoin-tomo", 
            "text": "TomoCoin (TOMO) is the native cryptocurrency to TomoChain, and will be the reserve cryptocurrency for all third-party apps running on TomoChain. Being the protocol token for the TomoChain infrastructure, TOMO will be needed by all parties utilising TomoChain to build apps or issue and integrate cryptographic tokens into their apps.  The supply of TOMO is fixed, long-term and non-inflationary. In addition to the above, TOMO is integral to the TomoChain network for a number of reasons: First, TOMO will be used to fund the development of TomoChain and TomoWallet; Second, TOMO will be used as a reward to incentivise the building of the Tomo engine/ecosystem; Third, TOMO will be used as a long-term, decentralized governance instrument of the Tomo network \u2013 the details of which will be announced in our upcoming technical white paper.  TOMO is currently available on a number of exchanges.", 
            "title": "What is Tomocoin (TOMO)? How can I earn Tomocoin (TOMO)?"
        }, 
        {
            "location": "/faq/general/#how-are-the-tomo-distributed", 
            "text": "The planned token allocation is as follows:   55% goes to the token sale participants  15% goes to the company, advisors and bounties  30% goes to the Reward Engine/ Ecosystem Building program.", 
            "title": "How are the TOMO distributed?"
        }, 
        {
            "location": "/faq/general/#can-i-mine-tomo", 
            "text": "TOMO is a non-mineable cryptocurrency.", 
            "title": "Can I mine TOMO?"
        }, 
        {
            "location": "/faq/general/#what-is-total-supply-and-circulating-supply-of-tomo", 
            "text": "TOMO total token supply is fixed at 100,000,000 TOMO. The current circulating supply is 55,000,000 TOMO", 
            "title": "What is total supply and circulating supply of TOMO?"
        }, 
        {
            "location": "/faq/general/#how-can-i-send-tomo-to-my-wallet", 
            "text": "You can store TOMO in wallet supporting ERC20 Standard. We recommend to store TOMO in MYETHERWALLET + TREZOR/LEDGER NANO S + METAMASK + Mist + Parity + Trust.  Tomocoin Token Address: 0x8b353021189375591723e7384262f45709a3c3dc\nToken Symbol: TOMO\nDecimals: 18", 
            "title": "How can I send TOMO to my wallet?"
        }, 
        {
            "location": "/faq/general/#what-would-your-currency-be-if-not-an-erc20-token", 
            "text": "TOMO will only be an ERC20 until the TomoChain mainnet launch.", 
            "title": "What would your currency be if not an ERC20 token?"
        }, 
        {
            "location": "/faq/general/#is-tomo-going-to-be-swapped-some-day-if-yes-how-do-i-know-ill-be-able-to-swap-my-tokens-if-i-take-them-from-an-exchange-how-will-you-switch-from-an-erc20-token-to-your-own", 
            "text": "We will lock your tokens before swapping to mainnet, so there is no chance of losing the tokens. Whilst tokens are locked, they are not transferable to another address.", 
            "title": "Is TOMO going to be swapped some day? If yes, how do I know I\u2019ll be able to swap my tokens if I take them from an exchange? How will you switch from an ERC20 token to your own?"
        }, 
        {
            "location": "/faq/tomochain/", 
            "text": "TOMOCHAIN\n\n\n\n\nWhat is Tomochain? How does it work?\n\n\nTomoChain is an innovative solution to the scalability problem of the Ethereum blockchain, and other current blockchain platforms. TomoChain relies on a system of 150 Masternodes with Proof of Stake Voting (POSV) consensus that can support near-zero fees, and 2-second transaction confirmation times. Security, stability and chain finality are guaranteed via novel techniques such as double validation, staking via smart-contracts and true randomization processes. \n\n\nTomoChain supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. New scaling techniques such as sharding, EVM parallelisation, private-chain generation, hardware integration will be continuously researched and incorporated into TomoChain's Masternode architecture which will be an ideal scalable smart-contract public blockchain for decentralized apps, token issuances and token integrations for small and big businesses.\n\n\n\n\nIs there a way to see the raw data that is stored in the blockchain?\n\n\nYes, there is. Token Sale information will be available for viewing on ethplorer or etherscan.\n\n\n\n\nHow can I check out the TomoChain infrastructure?\n\n\nThe TomoChain testnet 2.0 is available at \nhttps://medium.com/tomochain/tomochain-public-testnet-2-0-announcement-c7f49e28eefa\n\n\nTomo Faucet:\nhttps://faucet.testnet.tomochain.com/\n\n\nTomo Stats: \nhttps://stats.testnet.tomochain.com/\n\n\nTomo Master: \nhttps://master.testnet.tomochain.com/\n\n\nTomo Scan: \nhttps://scan.testnet.tomochain.com/\n\n\nTomo Wallet: \nhttps://wallet.testnet.tomochain.com/\n\n\n\n\nWhat is the difference between POA network and TomoChain? Where is the advantage?\n\n\nAt the moment, TomoChain uses PoA consensus like POA Network does. However, POA uses code base of Parity, whereas Tomochain uses the code base of Ethereum. Secondly, in the end of 2018, Tomochain will move from PoA consensus to PoSV masternodes.\nThirdly, regarding confirmation time, with Tomochain technology, one block will be created every 2s while a POA network block requires 5s. Finally, the Tomochain testnet 2.0 can handle over 2000 .\n\n\n\n\nWhat exactly is the node of Tomochain?\n\n\nInitially, regarding PoA consensus, nodes can be chosen by the built-in governance D-app but they will need to pass the technical requirements for scaling of the network.\n\n\nAt the second stage, Master-nodes can be chosen by the network in a trust-less way as long as they hold a sufficient amount of stake and pass the proof of credibility protocol in the governance d-app.\n\n\n\n\nWhy don't you publish all the codes on Github?\n\n\nPrivate development is done in GitLab which is free and more convenient. The code for cross-chain transfer protocol updates to Geth codebases. Only ReplyBlock is privately developed on Gitlab. However this software is actually running on the testnet, and under production (ReplyBlock) already.\n\n\nTomochain products, such as the Tomo Governance DApp, Block Explorer publish the source code on: https://github.com/tomochain. We released ICO smart-contract codes, container codes for building nodes and joint testnet, slides for tomochain roadmap, cross chain transfer demo codes. It should be clear that we are having private repos, and publish codes publicly when they are ready, or need to be audited.\n\n\nWe chose a model our team are comfortable with. Publishing work-in-progress is not suitable for us at the moment for multiple reasons - including inviting unnecessary distractions, and designing needs a to be done before coding. Protecting and auditing important codes is also more responsible, until the team reaches a certain scale.\n\n\nWe are also working with some third parties with which we signed non-disclosure-agreements for code development.\n\n\n\n\nIs Tomochain a side chain of Ethereum?\n\n\nNo, it isn't. Tomochain will have its own blockchain when mainnet is launched in Q4 2018.\n\n\n\n\nWhat is the difference between Tomocoin and Tomochain?\n\n\nTomocoin (TOMO) is the native token of the Tomochain infrustructure.\n\n\n\n\nWhat should I do when I need your support?\n\n\nYou can contact us via our channels:\n\n\n\n\nTwitter: \nhttps://twitter.com/TomoChainANN\n\n\nTelegram Chat Group: \nhttps://t.me/tomochain\n\n\nTelegram Announcement Channel: \nhttps://t.me/TomoChainChannel\n\n\nFacebook: \nhttps://www.facebook.com/tomochainofficial\n\n\nGithub: \nhttps://github.com/tomochain\n\n\nWebsite: \nhttps://tomochain.com\n\n\nMedium: \nhttps://medium.com/tomochain\n\n\nReddit: \nhttps://www.reddit.com/r/Tomochain/\n\n\nLinkedIn: \nhttps://www.linkedin.com/company/tomochain/\n\n\n\n\n\n\nWhat is required to become a Tomochain masternode?\n\n\nYou need to deposit 50k TOMO to become a masternode candidate. Candidates become masternodes if they belong to the top 150 most votedtps candidates. \n\n\n\n\nWhat are Candidate/ Masternode incentives?\n\n\nMasternodes will receive a significant amount of block rewards, which likely exceeds the cost for running the infrastructure. However, masternodes need to invest in TomoChain by depositing  at least 50K Tomo, and stake them for a long term. Furthermore, after depositing 50K Tomo to become a candidate, if the account does not become a masternode (has less votes than Top  150 most voted  Candidates), he/she will receive no rewards. Therefore, candidates are incentivised to do as much as they can to signal their capability to support TomoChain to get into top 150 most voted Candidates.\n\n\n\n\nWhat are Token Voter incentives? Do voters get reward from node holders too?\n\n\nToken voters should vote for candidates who signal strong support for TomoChain - as candidates that do not become masternodes will receive no rewards, and hence voters will also not be rewarded. However, token voters should also consider voting for candidates with lower number of votes, as the most voted candidates will have to share rewards with a larger number of voters.\n\n\n\n\nHow will reward be divided?\n\n\nThe rewards achieved by each masternode will be divided into three portions. The first portion of 40% called \u201cInfrastructure Reward\u201d goes to the masternode. The second portion of 50% called \u201cStaking Reward\u201d goes to the pool of voters for that masternode and is shared proportionally based on the number of tokens staked. The last portion of 10% called \u201cFoundation Reward\u201d goes to a special account controlled by the Masternode Foundation, which will initially be run by the TomoChain company.", 
            "title": "Tomochain"
        }, 
        {
            "location": "/faq/tomochain/#tomochain", 
            "text": "", 
            "title": "TOMOCHAIN"
        }, 
        {
            "location": "/faq/tomochain/#what-is-tomochain-how-does-it-work", 
            "text": "TomoChain is an innovative solution to the scalability problem of the Ethereum blockchain, and other current blockchain platforms. TomoChain relies on a system of 150 Masternodes with Proof of Stake Voting (POSV) consensus that can support near-zero fees, and 2-second transaction confirmation times. Security, stability and chain finality are guaranteed via novel techniques such as double validation, staking via smart-contracts and true randomization processes.   TomoChain supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. New scaling techniques such as sharding, EVM parallelisation, private-chain generation, hardware integration will be continuously researched and incorporated into TomoChain's Masternode architecture which will be an ideal scalable smart-contract public blockchain for decentralized apps, token issuances and token integrations for small and big businesses.", 
            "title": "What is Tomochain? How does it work?"
        }, 
        {
            "location": "/faq/tomochain/#is-there-a-way-to-see-the-raw-data-that-is-stored-in-the-blockchain", 
            "text": "Yes, there is. Token Sale information will be available for viewing on ethplorer or etherscan.", 
            "title": "Is there a way to see the raw data that is stored in the blockchain?"
        }, 
        {
            "location": "/faq/tomochain/#how-can-i-check-out-the-tomochain-infrastructure", 
            "text": "The TomoChain testnet 2.0 is available at  https://medium.com/tomochain/tomochain-public-testnet-2-0-announcement-c7f49e28eefa  Tomo Faucet: https://faucet.testnet.tomochain.com/  Tomo Stats:  https://stats.testnet.tomochain.com/  Tomo Master:  https://master.testnet.tomochain.com/  Tomo Scan:  https://scan.testnet.tomochain.com/  Tomo Wallet:  https://wallet.testnet.tomochain.com/", 
            "title": "How can I check out the TomoChain infrastructure?"
        }, 
        {
            "location": "/faq/tomochain/#what-is-the-difference-between-poa-network-and-tomochain-where-is-the-advantage", 
            "text": "At the moment, TomoChain uses PoA consensus like POA Network does. However, POA uses code base of Parity, whereas Tomochain uses the code base of Ethereum. Secondly, in the end of 2018, Tomochain will move from PoA consensus to PoSV masternodes.\nThirdly, regarding confirmation time, with Tomochain technology, one block will be created every 2s while a POA network block requires 5s. Finally, the Tomochain testnet 2.0 can handle over 2000 .", 
            "title": "What is the difference between POA network and TomoChain? Where is the advantage?"
        }, 
        {
            "location": "/faq/tomochain/#what-exactly-is-the-node-of-tomochain", 
            "text": "Initially, regarding PoA consensus, nodes can be chosen by the built-in governance D-app but they will need to pass the technical requirements for scaling of the network.  At the second stage, Master-nodes can be chosen by the network in a trust-less way as long as they hold a sufficient amount of stake and pass the proof of credibility protocol in the governance d-app.", 
            "title": "What exactly is the node of Tomochain?"
        }, 
        {
            "location": "/faq/tomochain/#why-dont-you-publish-all-the-codes-on-github", 
            "text": "Private development is done in GitLab which is free and more convenient. The code for cross-chain transfer protocol updates to Geth codebases. Only ReplyBlock is privately developed on Gitlab. However this software is actually running on the testnet, and under production (ReplyBlock) already.  Tomochain products, such as the Tomo Governance DApp, Block Explorer publish the source code on: https://github.com/tomochain. We released ICO smart-contract codes, container codes for building nodes and joint testnet, slides for tomochain roadmap, cross chain transfer demo codes. It should be clear that we are having private repos, and publish codes publicly when they are ready, or need to be audited.  We chose a model our team are comfortable with. Publishing work-in-progress is not suitable for us at the moment for multiple reasons - including inviting unnecessary distractions, and designing needs a to be done before coding. Protecting and auditing important codes is also more responsible, until the team reaches a certain scale.  We are also working with some third parties with which we signed non-disclosure-agreements for code development.", 
            "title": "Why don't you publish all the codes on Github?"
        }, 
        {
            "location": "/faq/tomochain/#is-tomochain-a-side-chain-of-ethereum", 
            "text": "No, it isn't. Tomochain will have its own blockchain when mainnet is launched in Q4 2018.", 
            "title": "Is Tomochain a side chain of Ethereum?"
        }, 
        {
            "location": "/faq/tomochain/#what-is-the-difference-between-tomocoin-and-tomochain", 
            "text": "Tomocoin (TOMO) is the native token of the Tomochain infrustructure.", 
            "title": "What is the difference between Tomocoin and Tomochain?"
        }, 
        {
            "location": "/faq/tomochain/#what-should-i-do-when-i-need-your-support", 
            "text": "You can contact us via our channels:   Twitter:  https://twitter.com/TomoChainANN  Telegram Chat Group:  https://t.me/tomochain  Telegram Announcement Channel:  https://t.me/TomoChainChannel  Facebook:  https://www.facebook.com/tomochainofficial  Github:  https://github.com/tomochain  Website:  https://tomochain.com  Medium:  https://medium.com/tomochain  Reddit:  https://www.reddit.com/r/Tomochain/  LinkedIn:  https://www.linkedin.com/company/tomochain/", 
            "title": "What should I do when I need your support?"
        }, 
        {
            "location": "/faq/tomochain/#what-is-required-to-become-a-tomochain-masternode", 
            "text": "You need to deposit 50k TOMO to become a masternode candidate. Candidates become masternodes if they belong to the top 150 most votedtps candidates.", 
            "title": "What is required to become a Tomochain masternode?"
        }, 
        {
            "location": "/faq/tomochain/#what-are-candidate-masternode-incentives", 
            "text": "Masternodes will receive a significant amount of block rewards, which likely exceeds the cost for running the infrastructure. However, masternodes need to invest in TomoChain by depositing  at least 50K Tomo, and stake them for a long term. Furthermore, after depositing 50K Tomo to become a candidate, if the account does not become a masternode (has less votes than Top  150 most voted  Candidates), he/she will receive no rewards. Therefore, candidates are incentivised to do as much as they can to signal their capability to support TomoChain to get into top 150 most voted Candidates.", 
            "title": "What are Candidate/ Masternode incentives?"
        }, 
        {
            "location": "/faq/tomochain/#what-are-token-voter-incentives-do-voters-get-reward-from-node-holders-too", 
            "text": "Token voters should vote for candidates who signal strong support for TomoChain - as candidates that do not become masternodes will receive no rewards, and hence voters will also not be rewarded. However, token voters should also consider voting for candidates with lower number of votes, as the most voted candidates will have to share rewards with a larger number of voters.", 
            "title": "What are Token Voter incentives? Do voters get reward from node holders too?"
        }, 
        {
            "location": "/faq/tomochain/#how-will-reward-be-divided", 
            "text": "The rewards achieved by each masternode will be divided into three portions. The first portion of 40% called \u201cInfrastructure Reward\u201d goes to the masternode. The second portion of 50% called \u201cStaking Reward\u201d goes to the pool of voters for that masternode and is shared proportionally based on the number of tokens staked. The last portion of 10% called \u201cFoundation Reward\u201d goes to a special account controlled by the Masternode Foundation, which will initially be run by the TomoChain company.", 
            "title": "How will reward be divided?"
        }, 
        {
            "location": "/faq/other/", 
            "text": "Other\n\n\n\n\nWhat is ReplyBlock?\n\n\nReply Block is the Q\nA application for blockchain enthusiasts and crypto advocates. It is rebranded from Tomoapp.\n\n\n\n\nWhat is the difference between Tomo application and ReplyBlock?\n\n\nTomo application refers to all D-apps will be built on top of Tomochain in the future. Reply Block is the first D-app built on Tomochain and funded by Tomochain.\n\n\n\n\nWhat about the exchange?\n\n\nWe do not and will not discuss anything related to exchanges due to the regulation. We will announce once it's ready.\n\n\n\n\nWhere is your company registered? Could i have a copy of certificate of incorporation, list of directors and details of registered office address?\n\n\nCheck it out \n(https://www.sgpbusiness.com/company/Tomochain-Pte-Ltd\n\n\nFeel free to buy ACRA copy if you want to know more details\n\n\n\n\nWhat is the price in presale and ICO?\n\n\nPresale Price: $0.2\nICO Price: $0.25 = 0.0003125ETH\n\n\n\n\n\n\nHow many people in the team?\n\n\nThe management team is 5 people - Check it out \nhttps://tomochain.com\n. Tomo team size is about 25 people now and we are growing the size according to the work volume", 
            "title": "Other"
        }, 
        {
            "location": "/faq/other/#other", 
            "text": "", 
            "title": "Other"
        }, 
        {
            "location": "/faq/other/#what-is-replyblock", 
            "text": "Reply Block is the Q A application for blockchain enthusiasts and crypto advocates. It is rebranded from Tomoapp.", 
            "title": "What is ReplyBlock?"
        }, 
        {
            "location": "/faq/other/#what-is-the-difference-between-tomo-application-and-replyblock", 
            "text": "Tomo application refers to all D-apps will be built on top of Tomochain in the future. Reply Block is the first D-app built on Tomochain and funded by Tomochain.", 
            "title": "What is the difference between Tomo application and ReplyBlock?"
        }, 
        {
            "location": "/faq/other/#what-about-the-exchange", 
            "text": "We do not and will not discuss anything related to exchanges due to the regulation. We will announce once it's ready.", 
            "title": "What about the exchange?"
        }, 
        {
            "location": "/faq/other/#where-is-your-company-registered-could-i-have-a-copy-of-certificate-of-incorporation-list-of-directors-and-details-of-registered-office-address", 
            "text": "Check it out  (https://www.sgpbusiness.com/company/Tomochain-Pte-Ltd  Feel free to buy ACRA copy if you want to know more details", 
            "title": "Where is your company registered? Could i have a copy of certificate of incorporation, list of directors and details of registered office address?"
        }, 
        {
            "location": "/faq/other/#what-is-the-price-in-presale-and-ico", 
            "text": "Presale Price: $0.2\nICO Price: $0.25 = 0.0003125ETH", 
            "title": "What is the price in presale and ICO?"
        }, 
        {
            "location": "/faq/other/#how-many-people-in-the-team", 
            "text": "The management team is 5 people - Check it out  https://tomochain.com . Tomo team size is about 25 people now and we are growing the size according to the work volume", 
            "title": "How many people in the team?"
        }, 
        {
            "location": "/use-cases/", 
            "text": "Use Cases\n\n\n\n\nPartners willing to run applications on top of Tomochain:\n\n\n\n\nSocial Network: \nhttps://replyblock.com\n\n\nSupply Chain: \nhttps://devery.io/\n\n\nE-commerce: \nhttp://binkabi.io\n\n\nAdvertising Ecosystem: \nhttps://bigbom.com\n\n\n\n\nTo be updated ...", 
            "title": "Use Cases"
        }, 
        {
            "location": "/use-cases/#use-cases", 
            "text": "Partners willing to run applications on top of Tomochain:   Social Network:  https://replyblock.com  Supply Chain:  https://devery.io/  E-commerce:  http://binkabi.io  Advertising Ecosystem:  https://bigbom.com   To be updated ...", 
            "title": "Use Cases"
        }, 
        {
            "location": "/contribution/github/", 
            "text": "If you want to contribute, you can create or pick up any \nhelp wanted\n issue in our \nGithub\n.\n\n\nFeel free to request a fund for your pull request via email at son@tomochain.com or using \nfundrequest.io\n.", 
            "title": "Github"
        }, 
        {
            "location": "/contribution/team/", 
            "text": "You can take a look at Tomochain's team of contractor on our website \ntomochain.com/#team\n.\n\n\nIf you want to join us, feel free to apply on \ntomochain.com/careers\n!", 
            "title": "Team"
        }, 
        {
            "location": "/links/", 
            "text": "Links\n\n\n\n\n\n\nMain website - \nhttps://tomochain.com\n\n\n\n\n\n\nWhitepaper - \nhttps://tomochain.com/docs/technical-whitepaper--1.0.pdf\n\n\n\n\n\n\nNetwork stats - \nhttps://stats.testnet.tomochain.com\n\n\n\n\n\n\nExplorer - \nhttps://scan.testnet.tomochain.com\n\n\n\n\n\n\nGovernance DApp - \nhttps://master.testnet.tomochain.com\n\n\n\n\n\n\nWallet - \nhttps://wallet.testnet.tomochain.com\n\n\n\n\n\n\nFaucet - \nhttps://faucet.testnet.tomochain.com\n\n\n\n\n\n\nGithub - \nhttps://github.com/tomochain", 
            "title": "Important Links"
        }, 
        {
            "location": "/links/#links", 
            "text": "Main website -  https://tomochain.com    Whitepaper -  https://tomochain.com/docs/technical-whitepaper--1.0.pdf    Network stats -  https://stats.testnet.tomochain.com    Explorer -  https://scan.testnet.tomochain.com    Governance DApp -  https://master.testnet.tomochain.com    Wallet -  https://wallet.testnet.tomochain.com    Faucet -  https://faucet.testnet.tomochain.com    Github -  https://github.com/tomochain", 
            "title": "Links"
        }, 
        {
            "location": "/about/", 
            "text": "About\n\n\nCompany\n\n\nTomoChain Pte. Ltd.\nSingapore Headquarters \n10 Anson Road #22-15 \nInternational Plaza \nSingapore 079903", 
            "title": "About"
        }, 
        {
            "location": "/about/#about", 
            "text": "", 
            "title": "About"
        }, 
        {
            "location": "/about/#company", 
            "text": "TomoChain Pte. Ltd.\nSingapore Headquarters \n10 Anson Road #22-15 \nInternational Plaza \nSingapore 079903", 
            "title": "Company"
        }
    ]
}